/************************************************************************                                                                 *
*   Filename:      MC_L3-Flash_LED-50p-int-1Hz-HTC.c                    *
*   Date:          8/6/12                                               *
*   File Version:  1.5                                                  *

*   Processor:     12F629                                               *
*   Compiler:      MPLAB XC8 v1.00 (Free mode)                          *
*************************************************************************
*                                                                       *
*   Description:    Lesson 3, example 1c                                *
*   Demonstrates use of Timer0 interrupt to perform a background task   *
*   Flash LED at exactly 1 Hz (50% duty cycle)                          *
************************************************************************/

#include <xc.h>
#include <stdint.h>

#include <pic12f1840.h>

/***** CONFIGURATION *****/
#include "config1840.h"
#define _XTAL_FREQ 4000000
#include "mojeFce1840-01.h"

// Pin assignments
#define sF_LED  sGPIO.GP2           // flashing LED (shadow)
#define PIEZO 2


/***** GLOBAL VARIABLES *****/
volatile union {                    // shadow copy of GPIO
    uint8_t         port;
    struct {
        unsigned    GP0     : 1;
        unsigned    GP1     : 1;
        unsigned    GP2     : 1;
        unsigned    GP3     : 1;
        unsigned    GP4     : 1;
        unsigned    GP5     : 1;
    };
} sGPIO;

void kazdouVterinu(void);
//==============================================================================
void init()
{
    //*** Initialisation
    set4mhz();

    // configure port
    PORTA = 0;                       // start with all LEDs off
    sGPIO.port = 0;                 //   update shadow
    TRISA = ~(1<<2);               // configure GP2 (only) as an output

    // configure Timer0
    OPTION_REGbits.T0CS = 0;        // select timer mode
    OPTION_REGbits.PSA = 1;         // no prescaler (assigned to WDT)
                                    // -> increment every 1 us
    // enable interrupts
    INTCONbits.T0IE = 1;            // enable Timer0 interrupt
    ei();                           // enable global interrupts
}


/***** MAIN PROGRAM *****/
void main()
{
    init();

    //*** Main loop
    for (;;)
    {
        // continually copy shadow GPIO to port
        PORTA = sGPIO.port;

    }   // repeat forever
}


/***** INTERRUPT SERVICE ROUTINE *****/
void interrupt isr(void)
{
    static uint16_t  cnt_t0 = 0;    // counts timer0 overflows
    //*** Service Timer0 interrupt
    //  TMR0 overflows every 250 clocks = 250 us
    //  Flashes LED at 1 Hz by toggling on every 2000th interrupt (every 500 ms)
    //   (only Timer0 interrupts are enabled)
    TMR0 += 256-250+3;     // add value to Timer0 for overflow after 250 counts
    INTCONbits.T0IF = 0;            // clear interrupt flag

    // toggle LED every 500 ms
    ++cnt_t0;                       // increment interrupt count (every 250 us)
    if (cnt_t0 == 500000/250*2) {     // if count overflow (every 500*2 ms),
        cnt_t0 = 0;                 //   reset count
        //sF_LED = ~sF_LED;           //   toggle LED (via shadow register)
        kazdouVterinu();
    }
}

void kazdouVterinu()
{
    
    //nep?esnsost cca 1min = 57 "s"
    //beep(PIEZO);
};