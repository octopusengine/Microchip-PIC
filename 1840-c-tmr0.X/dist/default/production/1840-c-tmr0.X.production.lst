

Microchip Technology PIC LITE Macro Assembler V1.30 build 55553 
                                                                                               Sat May 17 22:49:47 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	12F1840
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     	;# 
    42  0001                     	;# 
    43  0002                     	;# 
    44  0003                     	;# 
    45  0004                     	;# 
    46  0005                     	;# 
    47  0006                     	;# 
    48  0007                     	;# 
    49  0008                     	;# 
    50  0009                     	;# 
    51  000A                     	;# 
    52  000B                     	;# 
    53  000C                     	;# 
    54  0011                     	;# 
    55  0012                     	;# 
    56  0015                     	;# 
    57  0016                     	;# 
    58  0016                     	;# 
    59  0017                     	;# 
    60  0018                     	;# 
    61  0019                     	;# 
    62  001A                     	;# 
    63  001B                     	;# 
    64  001C                     	;# 
    65  001E                     	;# 
    66  001F                     	;# 
    67  008C                     	;# 
    68  0091                     	;# 
    69  0092                     	;# 
    70  0095                     	;# 
    71  0096                     	;# 
    72  0097                     	;# 
    73  0098                     	;# 
    74  0099                     	;# 
    75  009A                     	;# 
    76  009B                     	;# 
    77  009B                     	;# 
    78  009C                     	;# 
    79  009D                     	;# 
    80  009E                     	;# 
    81  010C                     	;# 
    82  0111                     	;# 
    83  0112                     	;# 
    84  0115                     	;# 
    85  0116                     	;# 
    86  0117                     	;# 
    87  0118                     	;# 
    88  0119                     	;# 
    89  011A                     	;# 
    90  011B                     	;# 
    91  011D                     	;# 
    92  011D                     	;# 
    93  018C                     	;# 
    94  0191                     	;# 
    95  0191                     	;# 
    96  0192                     	;# 
    97  0193                     	;# 
    98  0193                     	;# 
    99  0193                     	;# 
   100  0194                     	;# 
   101  0195                     	;# 
   102  0196                     	;# 
   103  0197                     	;# 
   104  0199                     	;# 
   105  019A                     	;# 
   106  019B                     	;# 
   107  019B                     	;# 
   108  019B                     	;# 
   109  019B                     	;# 
   110  019C                     	;# 
   111  019C                     	;# 
   112  019D                     	;# 
   113  019E                     	;# 
   114  019F                     	;# 
   115  020C                     	;# 
   116  0211                     	;# 
   117  0211                     	;# 
   118  0212                     	;# 
   119  0212                     	;# 
   120  0213                     	;# 
   121  0213                     	;# 
   122  0214                     	;# 
   123  0214                     	;# 
   124  0215                     	;# 
   125  0215                     	;# 
   126  0215                     	;# 
   127  0216                     	;# 
   128  0216                     	;# 
   129  0217                     	;# 
   130  0217                     	;# 
   131  0291                     	;# 
   132  0291                     	;# 
   133  0292                     	;# 
   134  0293                     	;# 
   135  0294                     	;# 
   136  0295                     	;# 
   137  0295                     	;# 
   138  0296                     	;# 
   139  0391                     	;# 
   140  0392                     	;# 
   141  0393                     	;# 
   142  039A                     	;# 
   143  039C                     	;# 
   144  039D                     	;# 
   145  039E                     	;# 
   146  039F                     	;# 
   147  0FE4                     	;# 
   148  0FE5                     	;# 
   149  0FE6                     	;# 
   150  0FE7                     	;# 
   151  0FE8                     	;# 
   152  0FE9                     	;# 
   153  0FEA                     	;# 
   154  0FEB                     	;# 
   155  0FED                     	;# 
   156  0FEE                     	;# 
   157  0FEF                     	;# 
   158                           
   159                           	psect	idataBANK0
   160  06FD                     __pidataBANK0:	
   161                           
   162                           ;initializer for _min1
   163  06FD  34FF               	retlw	255
   164  06FE  3400               	retlw	0
   165                           
   166                           ;initializer for _min2
   167  06FF  34FF               	retlw	255
   168  0700  3400               	retlw	0
   169  001E                     _CPSCON0	set	30
   170  000B                     _INTCONbits	set	11
   171  000C                     _PORTA	set	12
   172  0015                     _TMR0	set	21
   173  0018                     _CARRY	set	24
   174  005F                     _GIE	set	95
   175  008D                     _RCIF	set	141
   176  009D                     _ADCON0	set	157
   177  009D                     _ADCON0bits	set	157
   178  009E                     _ADCON1	set	158
   179  009E                     _ADCON1bits	set	158
   180  009C                     _ADRESH	set	156
   181  0095                     _OPTION_REGbits	set	149
   182  0099                     _OSCCON	set	153
   183  0099                     _OSCCONbits	set	153
   184  008C                     _TRISA	set	140
   185  011D                     _APFCONbits	set	285
   186  0111                     _CM1CON0	set	273
   187  0117                     _FVRCONbits	set	279
   188  08BE                     _FVRRDY	set	2238
   189  0191                     _EEADR	set	401
   190  018C                     _ANSELA	set	396
   191  019F                     _BAUDCONbits	set	415
   192  0195                     _EECON1	set	405
   193  0196                     _EECON2	set	406
   194  0193                     _EEDATA	set	403
   195  0199                     _RCREG	set	409
   196  019D                     _RCSTAbits	set	413
   197  019B                     _SPBRG	set	411
   198  019C                     _SPBRGH	set	412
   199  019A                     _TXREG	set	410
   200  019E                     _TXSTAbits	set	414
   201  0CA8                     _RD	set	3240
   202  0CA9                     _WR	set	3241
   203  0CAA                     _WREN	set	3242
   204                           
   205                           ; #config settings
   206  0000                     
   207                           	psect	cinit
   208  0023                     start_initialization:	
   209  0023                     __initialization:	
   210                           
   211                           ; Clear objects allocated to BANK0
   212  0023  303F               	movlw	low __pbssBANK0
   213  0024  0084               	movwf	4
   214  0025  3000               	movlw	high __pbssBANK0
   215  0026  0085               	movwf	5
   216  0027  3014               	movlw	20
   217  0028  3186  26E6  3180   	fcall	clear_ram0
   218                           
   219                           ; Clear objects allocated to BANK1
   220  002B  30BA               	movlw	low __pbssBANK1
   221  002C  0084               	movwf	4
   222  002D  3000               	movlw	high __pbssBANK1
   223  002E  0085               	movwf	5
   224  002F  3017               	movlw	23
   225  0030  3186  26E6  3180   	fcall	clear_ram0
   226                           
   227                           ; Initialize objects allocated to BANK0
   228  0033  3186  26FD  3180   	fcall	__pidataBANK0	;fetch initializer
   229  0036  00D3               	movwf	__pdataBANK0& (0+127)
   230  0037  3186  26FE  3180   	fcall	__pidataBANK0+1	;fetch initializer
   231  003A  00D4               	movwf	(__pdataBANK0+1)& (0+127)
   232  003B  3186  26FF  3180   	fcall	__pidataBANK0+2	;fetch initializer
   233  003E  00D5               	movwf	(__pdataBANK0+2)& (0+127)
   234  003F  3187  2700         	fcall	__pidataBANK0+3	;fetch initializer
   235  0041  00D6               	movwf	(__pdataBANK0+3)& (0+127)
   236  0042                     end_of_initialization:	
   237                           ;End of C runtime variable initialization code
   238                           
   239  0042                     __end_of__initialization:	
   240  0042  0020               	movlb	0
   241  0043  3186  2E78         	ljmp	_main	;jump to C main() function
   242                           
   243                           	psect	bssBANK0
   244  003F                     __pbssBANK0:	
   245  003F                     _adr:	
   246  003F                     	ds	2
   247  0041                     _i:	
   248  0041                     	ds	2
   249  0043                     _max1:	
   250  0043                     	ds	2
   251  0045                     _max2:	
   252  0045                     	ds	2
   253  0047                     _rem:	
   254  0047                     	ds	2
   255  0049                     _sec:	
   256  0049                     	ds	2
   257  004B                     _temp_num:	
   258  004B                     	ds	2
   259  004D                     _valADc:	
   260  004D                     	ds	2
   261  004F                     isr@cnt_t0:	
   262  004F                     	ds	2
   263  0051                     uart_dump@i:	
   264  0051                     	ds	2
   265                           
   266                           	psect	dataBANK0
   267  0053                     __pdataBANK0:	
   268  0053                     _min1:	
   269  0053                     	ds	2
   270  0055                     _min2:	
   271  0055                     	ds	2
   272                           
   273                           	psect	bssBANK1
   274  00BA                     __pbssBANK1:	
   275  00BA                     _retnum:	
   276  00BA                     	ds	21
   277  00CF                     _valADc16:	
   278  00CF                     	ds	2
   279                           
   280                           	psect	clrtext
   281  06E6                     clear_ram0:	
   282                           ;	Called with FSR0 containing the base address, and
   283                           ;	WREG with the size to clear
   284                           
   285  06E6  0064               	clrwdt	;clear the watchdog before getting into this loop
   286  06E7                     clrloop0:	
   287  06E7  0180               	clrf	0	;clear RAM location pointed to by FSR
   288  06E8  3101               	addfsr 0,1
   289  06E9  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   290  06EA  2EE7               	goto	clrloop0	;have we reached the end yet?
   291  06EB  3400               	retlw	0	;all done for this memory range, return
   292                           
   293                           	psect	cstackBANK1
   294  00A0                     __pcstackBANK1:	
   295  00A0                     ??_init:	
   296  00A0                     ?___awdiv:	
   297                           ; 0 bytes @ 0x0
   298                           
   299  00A0                     ___awdiv@divisor:	
   300                           ; 2 bytes @ 0x0
   301                           
   302                           
   303                           ; 2 bytes @ 0x0
   304  00A0                     	ds	2
   305  00A2                     ___awdiv@dividend:	
   306                           
   307                           ; 2 bytes @ 0x2
   308  00A2                     	ds	2
   309  00A4                     ___awdiv@counter:	
   310                           
   311                           ; 1 bytes @ 0x4
   312  00A4                     	ds	1
   313  00A5                     ___awdiv@sign:	
   314                           
   315                           ; 1 bytes @ 0x5
   316  00A5                     	ds	1
   317  00A6                     ___awdiv@quotient:	
   318                           
   319                           ; 2 bytes @ 0x6
   320  00A6                     	ds	2
   321  00A8                     ?_uart_3numb:	
   322  00A8                     uart_3numb@num3:	
   323                           ; 0 bytes @ 0x8
   324                           
   325                           
   326                           ; 2 bytes @ 0x8
   327  00A8                     	ds	2
   328  00AA                     ??_uart_3numb:	
   329                           
   330                           ; 0 bytes @ 0xA
   331  00AA                     	ds	4
   332  00AE                     uart_3numb@i1:	
   333                           
   334                           ; 2 bytes @ 0xE
   335  00AE                     	ds	2
   336  00B0                     uart_3numb@i10:	
   337                           
   338                           ; 2 bytes @ 0x10
   339  00B0                     	ds	2
   340  00B2                     uart_3numb@i100:	
   341                           
   342                           ; 2 bytes @ 0x12
   343  00B2                     	ds	2
   344  00B4                     ??_vypisEEprom:	
   345                           
   346                           ; 0 bytes @ 0x14
   347  00B4                     	ds	4
   348  00B8                     vypisEEprom@i:	
   349                           
   350                           ; 2 bytes @ 0x18
   351  00B8                     	ds	2
   352                           
   353                           	psect	cstackCOMMON
   354  0070                     __pcstackCOMMON:	
   355  0070                     ?_vypisEEprom:	
   356  0070                     ?_kazdouVterinu:	
   357                           ; 0 bytes @ 0x0
   358                           
   359  0070                     ??_adcSample:	
   360                           ; 0 bytes @ 0x0
   361                           
   362  0070                     ?_kazdouMinutu:	
   363                           ; 0 bytes @ 0x0
   364                           
   365  0070                     ?_ulozData:	
   366                           ; 0 bytes @ 0x0
   367                           
   368  0070                     ?_set4mhz:	
   369                           ; 0 bytes @ 0x0
   370                           
   371  0070                     ?_uart_init:	
   372                           ; 0 bytes @ 0x0
   373                           
   374  0070                     ?_uart_init600:	
   375                           ; 0 bytes @ 0x0
   376                           
   377  0070                     ?_uart_char:	
   378                           ; 0 bytes @ 0x0
   379                           
   380  0070                     ?_initAnalog:	
   381                           ; 0 bytes @ 0x0
   382                           
   383  0070                     ?_init:	
   384                           ; 0 bytes @ 0x0
   385                           
   386  0070                     ?_main:	
   387                           ; 0 bytes @ 0x0
   388                           
   389  0070                     ?_isr:	
   390                           ; 0 bytes @ 0x0
   391                           
   392  0070                     ?i1_beep:	
   393                           ; 0 bytes @ 0x0
   394                           
   395  0070                     ?i1_uart_char:	
   396                           ; 0 bytes @ 0x0
   397                           
   398  0070                     ??i1_uart_char:	
   399                           ; 0 bytes @ 0x0
   400                           
   401  0070                     ?_adcSample:	
   402                           ; 0 bytes @ 0x0
   403                           
   404  0070                     ?i1___wmul:	
   405                           ; 2 bytes @ 0x0
   406                           
   407  0070                     i1uart_char@data:	
   408                           ; 2 bytes @ 0x0
   409                           
   410  0070                     initAnalog@ch:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ulozData@value:	
   414                           ; 2 bytes @ 0x0
   415                           
   416  0070                     i1beep@co:	
   417                           ; 2 bytes @ 0x0
   418                           
   419  0070                     i1___wmul@multiplier:	
   420                           ; 2 bytes @ 0x0
   421                           
   422                           
   423                           ; 2 bytes @ 0x0
   424  0070                     	ds	1
   425  0071                     ?i1_uart_1numb:	
   426  0071                     i1uart_1numb@num:	
   427                           ; 0 bytes @ 0x1
   428                           
   429                           
   430                           ; 2 bytes @ 0x1
   431  0071                     	ds	1
   432  0072                     ??_ulozData:	
   433  0072                     ??_initAnalog:	
   434                           ; 0 bytes @ 0x2
   435                           
   436  0072                     ??i1_beep:	
   437                           ; 0 bytes @ 0x2
   438                           
   439  0072                     i1___wmul@multiplicand:	
   440                           ; 0 bytes @ 0x2
   441                           
   442                           
   443                           ; 2 bytes @ 0x2
   444  0072                     	ds	1
   445  0073                     ??i1_uart_1numb:	
   446                           
   447                           ; 0 bytes @ 0x3
   448  0073                     	ds	1
   449  0074                     ??i1___wmul:	
   450  0074                     i1beep@p:	
   451                           ; 0 bytes @ 0x4
   452                           
   453  0074                     i1___wmul@product:	
   454                           ; 2 bytes @ 0x4
   455                           
   456                           
   457                           ; 2 bytes @ 0x4
   458  0074                     	ds	2
   459  0076                     ??_kazdouMinutu:	
   460  0076                     ?i1___awdiv:	
   461                           ; 0 bytes @ 0x6
   462                           
   463  0076                     i1___awdiv@divisor:	
   464                           ; 2 bytes @ 0x6
   465                           
   466                           
   467                           ; 2 bytes @ 0x6
   468  0076                     	ds	2
   469  0078                     i1___awdiv@dividend:	
   470                           
   471                           ; 2 bytes @ 0x8
   472  0078                     	ds	2
   473  007A                     ??i1___awdiv:	
   474                           
   475                           ; 0 bytes @ 0xA
   476  007A                     	ds	1
   477  007B                     ??_posliData:	
   478                           
   479                           ; 0 bytes @ 0xB
   480  007B                     	ds	2
   481                           
   482                           	psect	cstackBANK0
   483  0020                     __pcstackBANK0:	
   484  0020                     i1___awdiv@counter:	
   485                           
   486                           ; 1 bytes @ 0x0
   487  0020                     	ds	1
   488  0021                     i1___awdiv@sign:	
   489                           
   490                           ; 1 bytes @ 0x1
   491  0021                     	ds	1
   492  0022                     i1___awdiv@quotient:	
   493                           
   494                           ; 2 bytes @ 0x2
   495  0022                     	ds	2
   496  0024                     ?i1_uart_3numb:	
   497  0024                     i1uart_3numb@num3:	
   498                           ; 0 bytes @ 0x4
   499                           
   500                           
   501                           ; 2 bytes @ 0x4
   502  0024                     	ds	2
   503  0026                     ??i1_uart_3numb:	
   504                           
   505                           ; 0 bytes @ 0x6
   506  0026                     	ds	4
   507  002A                     i1uart_3numb@i1:	
   508                           
   509                           ; 2 bytes @ 0xA
   510  002A                     	ds	2
   511  002C                     i1uart_3numb@i10:	
   512                           
   513                           ; 2 bytes @ 0xC
   514  002C                     	ds	2
   515  002E                     i1uart_3numb@i100:	
   516                           
   517                           ; 2 bytes @ 0xE
   518  002E                     	ds	2
   519  0030                     ?_posliData:	
   520  0030                     posliData@ch:	
   521                           ; 0 bytes @ 0x10
   522                           
   523                           
   524                           ; 2 bytes @ 0x10
   525  0030                     	ds	2
   526  0032                     posliData@value:	
   527                           
   528                           ; 2 bytes @ 0x12
   529  0032                     	ds	2
   530  0034                     ??_kazdouVterinu:	
   531                           
   532                           ; 0 bytes @ 0x14
   533  0034                     	ds	2
   534  0036                     ??_isr:	
   535                           
   536                           ; 0 bytes @ 0x16
   537  0036                     	ds	2
   538  0038                     ??_set4mhz:	
   539  0038                     ?_beep:	
   540                           ; 0 bytes @ 0x18
   541                           
   542  0038                     ?_beep2:	
   543                           ; 0 bytes @ 0x18
   544                           
   545  0038                     ??_uart_init:	
   546                           ; 0 bytes @ 0x18
   547                           
   548  0038                     ??_uart_init600:	
   549                           ; 0 bytes @ 0x18
   550                           
   551  0038                     ??_uart_char:	
   552                           ; 0 bytes @ 0x18
   553                           
   554  0038                     ?_buttonpressed:	
   555                           ; 0 bytes @ 0x18
   556                           
   557  0038                     ?___wmul:	
   558                           ; 2 bytes @ 0x18
   559                           
   560  0038                     uart_char@data:	
   561                           ; 2 bytes @ 0x18
   562                           
   563  0038                     beep@co:	
   564                           ; 1 bytes @ 0x18
   565                           
   566  0038                     beep2@co:	
   567                           ; 2 bytes @ 0x18
   568                           
   569  0038                     buttonpressed@poz:	
   570                           ; 2 bytes @ 0x18
   571                           
   572  0038                     ___wmul@multiplier:	
   573                           ; 2 bytes @ 0x18
   574                           
   575                           
   576                           ; 2 bytes @ 0x18
   577  0038                     	ds	1
   578  0039                     ?_uart_1numb:	
   579  0039                     uart_1numb@num:	
   580                           ; 0 bytes @ 0x19
   581                           
   582                           
   583                           ; 2 bytes @ 0x19
   584  0039                     	ds	1
   585  003A                     ??_buttonpressed:	
   586  003A                     ??_beep:	
   587                           ; 0 bytes @ 0x1A
   588                           
   589  003A                     ??_beep2:	
   590                           ; 0 bytes @ 0x1A
   591                           
   592  003A                     ___wmul@multiplicand:	
   593                           ; 0 bytes @ 0x1A
   594                           
   595                           
   596                           ; 2 bytes @ 0x1A
   597  003A                     	ds	1
   598  003B                     ??_uart_1numb:	
   599                           
   600                           ; 0 bytes @ 0x1B
   601  003B                     	ds	1
   602  003C                     ??___wmul:	
   603  003C                     beep@p:	
   604                           ; 0 bytes @ 0x1C
   605                           
   606  003C                     beep2@p:	
   607                           ; 2 bytes @ 0x1C
   608                           
   609  003C                     ___wmul@product:	
   610                           ; 2 bytes @ 0x1C
   611                           
   612                           
   613                           ; 2 bytes @ 0x1C
   614  003C                     	ds	2
   615  003E                     ??___awdiv:	
   616                           
   617                           ; 0 bytes @ 0x1E
   618  003E                     	ds	1
   619  003F                     ??_main:	
   620                           
   621                           	psect	maintext
   622  0678                     __pmaintext:	
   623                           ; 0 bytes @ 0x1F
   624 ;;
   625 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   626 ;;
   627 ;; *************** function _main *****************
   628 ;; Defined at:
   629 ;;		line 101 in file "1840-c-tmr0.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;		None
   632 ;; Auto vars:     Size  Location     Type
   633 ;;		None
   634 ;; Return value:  Size  Location     Type
   635 ;;		None               void
   636 ;; Registers used:
   637 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   638 ;; Tracked objects:
   639 ;;		On entry : 17F/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   643 ;;      Params:         0       0       0       0
   644 ;;      Locals:         0       0       0       0
   645 ;;      Temps:          0       0       0       0
   646 ;;      Totals:         0       0       0       0
   647 ;;Total ram usage:        0 bytes
   648 ;; Hardware stack levels required when called:   10
   649 ;; This function calls:
   650 ;;		_beep2
   651 ;;		_buttonpressed
   652 ;;		_init
   653 ;;		_uart_init600
   654 ;;		_vypisEEprom
   655 ;; This function is called by:
   656 ;;		Startup code after reset
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           
   661                           ;psect for function _main
   662  0678                     _main:	
   663                           
   664                           ;1840-c-tmr0.c: 103: init();
   665                           
   666                           ;incstack = 0
   667                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   668  0678  3184  248F  3186   	fcall	_init
   669                           
   670                           ;1840-c-tmr0.c: 104: uart_init600();
   671  067B  3186  26F2  3186   	fcall	_uart_init600
   672  067E                     l2556:	
   673                           ;1840-c-tmr0.c: 107: for (;;)
   674                           
   675                           
   676                           ;1840-c-tmr0.c: 108: {
   677                           ;1840-c-tmr0.c: 110: if(buttonpressed(5)==1)
   678  067E  3005               	movlw	5
   679  067F  0020               	movlb	0	; select bank0
   680  0680  00B8               	movwf	buttonpressed@poz
   681  0681  3000               	movlw	0
   682  0682  00B9               	movwf	buttonpressed@poz+1
   683  0683  3186  2630  3186   	fcall	_buttonpressed
   684  0686  3001               	movlw	1
   685  0687  0020               	movlb	0	; select bank0
   686  0688  0638               	xorwf	?_buttonpressed,w
   687  0689  0439               	iorwf	?_buttonpressed+1,w
   688  068A  1D03               	skipz
   689  068B  2E7E               	goto	l2556
   690                           
   691                           ;1840-c-tmr0.c: 111: {
   692                           ;1840-c-tmr0.c: 112: beep2(2);
   693  068C  3002               	movlw	2
   694  068D  00B8               	movwf	beep2@co
   695  068E  3000               	movlw	0
   696  068F  00B9               	movwf	beep2@co+1
   697  0690  3185  25F9  3186   	fcall	_beep2
   698                           
   699                           ;1840-c-tmr0.c: 113: vypisEEprom();
   700  0693  3180  2045  3186   	fcall	_vypisEEprom
   701                           
   702                           ;1840-c-tmr0.c: 115: }
   703                           ;1840-c-tmr0.c: 117: }
   704  0696  2E7E               	goto	l2556
   705  0697                     __end_of_main:	
   706                           
   707                           	psect	text1
   708  0045                     __ptext1:	
   709 ;; *************** function _vypisEEprom *****************
   710 ;; Defined at:
   711 ;;		line 203 in file "1840-c-tmr0.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;		None
   714 ;; Auto vars:     Size  Location     Type
   715 ;;  i               2   24[BANK1 ] int 
   716 ;; Return value:  Size  Location     Type
   717 ;;		None               void
   718 ;; Registers used:
   719 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   720 ;; Tracked objects:
   721 ;;		On entry : 0/0
   722 ;;		On exit  : 0/0
   723 ;;		Unchanged: 0/0
   724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   725 ;;      Params:         0       0       0       0
   726 ;;      Locals:         0       0       2       0
   727 ;;      Temps:          0       0       4       0
   728 ;;      Totals:         0       0       6       0
   729 ;;Total ram usage:        6 bytes
   730 ;; Hardware stack levels used:    1
   731 ;; Hardware stack levels required when called:    9
   732 ;; This function calls:
   733 ;;		_uart_3numb
   734 ;;		_uart_char
   735 ;; This function is called by:
   736 ;;		_main
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740                           
   741                           ;psect for function _vypisEEprom
   742  0045                     _vypisEEprom:	
   743                           
   744                           ;1840-c-tmr0.c: 205: INTCONbits.T0IE = 0;
   745                           
   746                           ;incstack = 0
   747                           ; Regs used in _vypisEEprom: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   748  0045  128B               	bcf	11,5	;volatile
   749                           
   750                           ;1840-c-tmr0.c: 207: uart_char(' ');
   751  0046  3020               	movlw	32
   752  0047  3186  26D7  3180   	fcall	_uart_char
   753                           
   754                           ;1840-c-tmr0.c: 208: uart_char(' ');
   755  004A  3020               	movlw	32
   756  004B  3186  26D7  3180   	fcall	_uart_char
   757                           
   758                           ;1840-c-tmr0.c: 209: uart_char(' ');
   759  004E  3020               	movlw	32
   760  004F  3186  26D7  3180   	fcall	_uart_char
   761                           
   762                           ;1840-c-tmr0.c: 210: uart_char(' ');
   763  0052  3020               	movlw	32
   764  0053  3186  26D7  3180   	fcall	_uart_char
   765                           
   766                           ;1840-c-tmr0.c: 211: uart_char(' ');
   767  0056  3020               	movlw	32
   768  0057  3186  26D7  3180   	fcall	_uart_char
   769                           
   770                           ;1840-c-tmr0.c: 213: uart_char('<');
   771  005A  303C               	movlw	60
   772  005B  3186  26D7  3180   	fcall	_uart_char
   773                           
   774                           ;1840-c-tmr0.c: 214: uart_char('T');
   775  005E  3054               	movlw	84
   776  005F  3186  26D7  3180   	fcall	_uart_char
   777                           
   778                           ;1840-c-tmr0.c: 215: uart_char('A');
   779  0062  3041               	movlw	65
   780  0063  3186  26D7  3180   	fcall	_uart_char
   781                           
   782                           ;1840-c-tmr0.c: 216: uart_char('B');
   783  0066  3042               	movlw	66
   784  0067  3186  26D7  3180   	fcall	_uart_char
   785                           
   786                           ;1840-c-tmr0.c: 217: uart_char('L');
   787  006A  304C               	movlw	76
   788  006B  3186  26D7  3180   	fcall	_uart_char
   789                           
   790                           ;1840-c-tmr0.c: 218: uart_char('E');
   791  006E  3045               	movlw	69
   792  006F  3186  26D7  3180   	fcall	_uart_char
   793                           
   794                           ;1840-c-tmr0.c: 219: uart_char('>');
   795  0072  303E               	movlw	62
   796  0073  3186  26D7  3180   	fcall	_uart_char
   797                           
   798                           ;1840-c-tmr0.c: 221: for (int i=0; i<256/4; i++)
   799  0076  0021               	movlb	1	; select bank1
   800  0077  01B8               	clrf	vypisEEprom@i^(0+128)
   801  0078  01B9               	clrf	(vypisEEprom@i+1)^(0+128)
   802  0079  0839               	movf	(vypisEEprom@i+1)^(0+128),w
   803  007A  3A80               	xorlw	128
   804  007B  00FF               	movwf	127
   805  007C  3080               	movlw	128
   806  007D  027F               	subwf	127,w
   807  007E  1D03               	skipz
   808  007F  2882               	goto	u1875
   809  0080  3040               	movlw	64
   810  0081  0238               	subwf	vypisEEprom@i^(0+128),w
   811  0082                     u1875:	
   812  0082  1803               	btfsc	3,0
   813  0083  2992               	goto	l2600
   814  0084                     l2570:	
   815                           
   816                           ;1840-c-tmr0.c: 222: {
   817                           ;1840-c-tmr0.c: 224: uart_char('<');
   818  0084  303C               	movlw	60
   819  0085  3186  26D7  3180   	fcall	_uart_char
   820                           
   821                           ;1840-c-tmr0.c: 225: uart_char('T');
   822  0088  3054               	movlw	84
   823  0089  3186  26D7  3180   	fcall	_uart_char
   824                           
   825                           ;1840-c-tmr0.c: 226: uart_char('R');
   826  008C  3052               	movlw	82
   827  008D  3186  26D7  3180   	fcall	_uart_char
   828                           
   829                           ;1840-c-tmr0.c: 227: uart_char('>');
   830  0090  303E               	movlw	62
   831  0091  3186  26D7  3180   	fcall	_uart_char
   832                           
   833                           ;1840-c-tmr0.c: 229: uart_char('<');
   834  0094  303C               	movlw	60
   835  0095  3186  26D7  3180   	fcall	_uart_char
   836                           
   837                           ;1840-c-tmr0.c: 230: uart_char('T');
   838  0098  3054               	movlw	84
   839  0099  3186  26D7  3180   	fcall	_uart_char
   840                           
   841                           ;1840-c-tmr0.c: 231: uart_char('D');
   842  009C  3044               	movlw	68
   843  009D  3186  26D7  3180   	fcall	_uart_char
   844                           
   845                           ;1840-c-tmr0.c: 232: uart_char('>');
   846  00A0  303E               	movlw	62
   847  00A1  3186  26D7  3180   	fcall	_uart_char
   848                           
   849                           ;1840-c-tmr0.c: 233: uart_3numb(((EEADR=(i*4)),(EECON1&=0x3F),(RD=1),EEDATA));
   850  00A4  0021               	movlb	1	; select bank1
   851  00A5  0839               	movf	(vypisEEprom@i+1)^(0+128),w
   852  00A6  00B5               	movwf	(??_vypisEEprom^(0+128)+1)
   853  00A7  0838               	movf	vypisEEprom@i^(0+128),w
   854  00A8  00B4               	movwf	??_vypisEEprom^(0+128)
   855  00A9  35B4               	lslf	??_vypisEEprom^(0+128),f
   856  00AA  0DB5               	rlf	(??_vypisEEprom^(0+128)+1),f
   857  00AB  35B4               	lslf	??_vypisEEprom^(0+128),f
   858  00AC  0DB5               	rlf	(??_vypisEEprom^(0+128)+1),f
   859  00AD  0834               	movf	??_vypisEEprom^(0+128),w
   860  00AE  0023               	movlb	3	; select bank3
   861  00AF  0091               	movwf	17	;volatile
   862  00B0  0021               	movlb	1	; select bank1
   863  00B1  0835               	movf	(??_vypisEEprom+1)^(0+128),w
   864  00B2  0023               	movlb	3	; select bank3
   865  00B3  0092               	movwf	18	;volatile
   866  00B4  303F               	movlw	63
   867  00B5  0021               	movlb	1	; select bank1
   868  00B6  00B4               	movwf	??_vypisEEprom^(0+128)
   869  00B7  0834               	movf	??_vypisEEprom^(0+128),w
   870  00B8  0023               	movlb	3	; select bank3
   871  00B9  0595               	andwf	21,f	;volsfr
   872  00BA  1415               	bsf	21,0	;volsfr
   873  00BB  0813               	movf	19,w	;volatile
   874  00BC  0021               	movlb	1	; select bank1
   875  00BD  00B4               	movwf	??_vypisEEprom^(0+128)
   876  00BE  01B5               	clrf	(??_vypisEEprom^(0+128)+1)
   877  00BF  0834               	movf	??_vypisEEprom^(0+128),w
   878  00C0  00A8               	movwf	uart_3numb@num3^(0+128)
   879  00C1  0835               	movf	(??_vypisEEprom+1)^(0+128),w
   880  00C2  00A9               	movwf	(uart_3numb@num3+1)^(0+128)
   881  00C3  3181  21B4  3180   	fcall	_uart_3numb
   882                           
   883                           ;1840-c-tmr0.c: 235: uart_char('<');
   884  00C6  303C               	movlw	60
   885  00C7  3186  26D7  3180   	fcall	_uart_char
   886                           
   887                           ;1840-c-tmr0.c: 236: uart_char('T');
   888  00CA  3054               	movlw	84
   889  00CB  3186  26D7  3180   	fcall	_uart_char
   890                           
   891                           ;1840-c-tmr0.c: 237: uart_char('D');
   892  00CE  3044               	movlw	68
   893  00CF  3186  26D7  3180   	fcall	_uart_char
   894                           
   895                           ;1840-c-tmr0.c: 238: uart_char('>');
   896  00D2  303E               	movlw	62
   897  00D3  3186  26D7  3180   	fcall	_uart_char
   898                           
   899                           ;1840-c-tmr0.c: 239: uart_3numb(((EEADR=(i*4+1)),(EECON1&=0x3F),(RD=1),EEDATA));
   900  00D6  0021               	movlb	1	; select bank1
   901  00D7  0839               	movf	(vypisEEprom@i+1)^(0+128),w
   902  00D8  00B5               	movwf	(??_vypisEEprom^(0+128)+1)
   903  00D9  0838               	movf	vypisEEprom@i^(0+128),w
   904  00DA  00B4               	movwf	??_vypisEEprom^(0+128)
   905  00DB  35B4               	lslf	??_vypisEEprom^(0+128),f
   906  00DC  0DB5               	rlf	(??_vypisEEprom^(0+128)+1),f
   907  00DD  35B4               	lslf	??_vypisEEprom^(0+128),f
   908  00DE  0DB5               	rlf	(??_vypisEEprom^(0+128)+1),f
   909  00DF  0834               	movf	??_vypisEEprom^(0+128),w
   910  00E0  3E01               	addlw	1
   911  00E1  00B6               	movwf	(??_vypisEEprom+2)^(0+128)
   912  00E2  3000               	movlw	0
   913  00E3  3D35               	addwfc	(??_vypisEEprom+1)^(0+128),w
   914  00E4  00B7               	movwf	(??_vypisEEprom+3)^(0+128)
   915  00E5  0836               	movf	(??_vypisEEprom+2)^(0+128),w
   916  00E6  0023               	movlb	3	; select bank3
   917  00E7  0091               	movwf	17	;volatile
   918  00E8  0021               	movlb	1	; select bank1
   919  00E9  0837               	movf	(??_vypisEEprom+3)^(0+128),w
   920  00EA  0023               	movlb	3	; select bank3
   921  00EB  0092               	movwf	18	;volatile
   922  00EC  303F               	movlw	63
   923  00ED  0021               	movlb	1	; select bank1
   924  00EE  00B4               	movwf	??_vypisEEprom^(0+128)
   925  00EF  0834               	movf	??_vypisEEprom^(0+128),w
   926  00F0  0023               	movlb	3	; select bank3
   927  00F1  0595               	andwf	21,f	;volsfr
   928  00F2  1415               	bsf	21,0	;volsfr
   929  00F3  0813               	movf	19,w	;volatile
   930  00F4  0021               	movlb	1	; select bank1
   931  00F5  00B4               	movwf	??_vypisEEprom^(0+128)
   932  00F6  01B5               	clrf	(??_vypisEEprom^(0+128)+1)
   933  00F7  0834               	movf	??_vypisEEprom^(0+128),w
   934  00F8  00A8               	movwf	uart_3numb@num3^(0+128)
   935  00F9  0835               	movf	(??_vypisEEprom+1)^(0+128),w
   936  00FA  00A9               	movwf	(uart_3numb@num3+1)^(0+128)
   937  00FB  3181  21B4  3180   	fcall	_uart_3numb
   938                           
   939                           ;1840-c-tmr0.c: 241: uart_char('<');
   940  00FE  303C               	movlw	60
   941  00FF  3186  26D7  3180   	fcall	_uart_char
   942                           
   943                           ;1840-c-tmr0.c: 242: uart_char('T');
   944  0102  3054               	movlw	84
   945  0103  3186  26D7  3180   	fcall	_uart_char
   946                           
   947                           ;1840-c-tmr0.c: 243: uart_char('D');
   948  0106  3044               	movlw	68
   949  0107  3186  26D7  3180   	fcall	_uart_char
   950                           
   951                           ;1840-c-tmr0.c: 244: uart_char('>');
   952  010A  303E               	movlw	62
   953  010B  3186  26D7  3180   	fcall	_uart_char
   954                           
   955                           ;1840-c-tmr0.c: 245: uart_3numb(((EEADR=(i*4+2)),(EECON1&=0x3F),(RD=1),EEDATA));
   956  010E  0021               	movlb	1	; select bank1
   957  010F  0839               	movf	(vypisEEprom@i+1)^(0+128),w
   958  0110  00B5               	movwf	(??_vypisEEprom^(0+128)+1)
   959  0111  0838               	movf	vypisEEprom@i^(0+128),w
   960  0112  00B4               	movwf	??_vypisEEprom^(0+128)
   961  0113  35B4               	lslf	??_vypisEEprom^(0+128),f
   962  0114  0DB5               	rlf	(??_vypisEEprom^(0+128)+1),f
   963  0115  35B4               	lslf	??_vypisEEprom^(0+128),f
   964  0116  0DB5               	rlf	(??_vypisEEprom^(0+128)+1),f
   965  0117  0834               	movf	??_vypisEEprom^(0+128),w
   966  0118  3E02               	addlw	2
   967  0119  00B6               	movwf	(??_vypisEEprom+2)^(0+128)
   968  011A  3000               	movlw	0
   969  011B  3D35               	addwfc	(??_vypisEEprom+1)^(0+128),w
   970  011C  00B7               	movwf	(??_vypisEEprom+3)^(0+128)
   971  011D  0836               	movf	(??_vypisEEprom+2)^(0+128),w
   972  011E  0023               	movlb	3	; select bank3
   973  011F  0091               	movwf	17	;volatile
   974  0120  0021               	movlb	1	; select bank1
   975  0121  0837               	movf	(??_vypisEEprom+3)^(0+128),w
   976  0122  0023               	movlb	3	; select bank3
   977  0123  0092               	movwf	18	;volatile
   978  0124  303F               	movlw	63
   979  0125  0021               	movlb	1	; select bank1
   980  0126  00B4               	movwf	??_vypisEEprom^(0+128)
   981  0127  0834               	movf	??_vypisEEprom^(0+128),w
   982  0128  0023               	movlb	3	; select bank3
   983  0129  0595               	andwf	21,f	;volsfr
   984  012A  1415               	bsf	21,0	;volsfr
   985  012B  0813               	movf	19,w	;volatile
   986  012C  0021               	movlb	1	; select bank1
   987  012D  00B4               	movwf	??_vypisEEprom^(0+128)
   988  012E  01B5               	clrf	(??_vypisEEprom^(0+128)+1)
   989  012F  0834               	movf	??_vypisEEprom^(0+128),w
   990  0130  00A8               	movwf	uart_3numb@num3^(0+128)
   991  0131  0835               	movf	(??_vypisEEprom+1)^(0+128),w
   992  0132  00A9               	movwf	(uart_3numb@num3+1)^(0+128)
   993  0133  3181  21B4  3180   	fcall	_uart_3numb
   994                           
   995                           ;1840-c-tmr0.c: 247: uart_char('<');
   996  0136  303C               	movlw	60
   997  0137  3186  26D7  3180   	fcall	_uart_char
   998                           
   999                           ;1840-c-tmr0.c: 248: uart_char('T');
  1000  013A  3054               	movlw	84
  1001  013B  3186  26D7  3180   	fcall	_uart_char
  1002                           
  1003                           ;1840-c-tmr0.c: 249: uart_char('D');
  1004  013E  3044               	movlw	68
  1005  013F  3186  26D7  3180   	fcall	_uart_char
  1006                           
  1007                           ;1840-c-tmr0.c: 250: uart_char('>');
  1008  0142  303E               	movlw	62
  1009  0143  3186  26D7  3180   	fcall	_uart_char
  1010                           
  1011                           ;1840-c-tmr0.c: 251: uart_3numb(((EEADR=(i*4+3)),(EECON1&=0x3F),(RD=1),EEDATA));
  1012  0146  0021               	movlb	1	; select bank1
  1013  0147  0839               	movf	(vypisEEprom@i+1)^(0+128),w
  1014  0148  00B5               	movwf	(??_vypisEEprom^(0+128)+1)
  1015  0149  0838               	movf	vypisEEprom@i^(0+128),w
  1016  014A  00B4               	movwf	??_vypisEEprom^(0+128)
  1017  014B  35B4               	lslf	??_vypisEEprom^(0+128),f
  1018  014C  0DB5               	rlf	(??_vypisEEprom^(0+128)+1),f
  1019  014D  35B4               	lslf	??_vypisEEprom^(0+128),f
  1020  014E  0DB5               	rlf	(??_vypisEEprom^(0+128)+1),f
  1021  014F  0834               	movf	??_vypisEEprom^(0+128),w
  1022  0150  3E03               	addlw	3
  1023  0151  00B6               	movwf	(??_vypisEEprom+2)^(0+128)
  1024  0152  3000               	movlw	0
  1025  0153  3D35               	addwfc	(??_vypisEEprom+1)^(0+128),w
  1026  0154  00B7               	movwf	(??_vypisEEprom+3)^(0+128)
  1027  0155  0836               	movf	(??_vypisEEprom+2)^(0+128),w
  1028  0156  0023               	movlb	3	; select bank3
  1029  0157  0091               	movwf	17	;volatile
  1030  0158  0021               	movlb	1	; select bank1
  1031  0159  0837               	movf	(??_vypisEEprom+3)^(0+128),w
  1032  015A  0023               	movlb	3	; select bank3
  1033  015B  0092               	movwf	18	;volatile
  1034  015C  303F               	movlw	63
  1035  015D  0021               	movlb	1	; select bank1
  1036  015E  00B4               	movwf	??_vypisEEprom^(0+128)
  1037  015F  0834               	movf	??_vypisEEprom^(0+128),w
  1038  0160  0023               	movlb	3	; select bank3
  1039  0161  0595               	andwf	21,f	;volsfr
  1040  0162  1415               	bsf	21,0	;volsfr
  1041  0163  0813               	movf	19,w	;volatile
  1042  0164  0021               	movlb	1	; select bank1
  1043  0165  00B4               	movwf	??_vypisEEprom^(0+128)
  1044  0166  01B5               	clrf	(??_vypisEEprom^(0+128)+1)
  1045  0167  0834               	movf	??_vypisEEprom^(0+128),w
  1046  0168  00A8               	movwf	uart_3numb@num3^(0+128)
  1047  0169  0835               	movf	(??_vypisEEprom+1)^(0+128),w
  1048  016A  00A9               	movwf	(uart_3numb@num3+1)^(0+128)
  1049  016B  3181  21B4  3180   	fcall	_uart_3numb
  1050                           
  1051                           ;1840-c-tmr0.c: 254: uart_char('<');
  1052  016E  303C               	movlw	60
  1053  016F  3186  26D7  3180   	fcall	_uart_char
  1054                           
  1055                           ;1840-c-tmr0.c: 255: uart_char('/');
  1056  0172  302F               	movlw	47
  1057  0173  3186  26D7  3180   	fcall	_uart_char
  1058                           
  1059                           ;1840-c-tmr0.c: 256: uart_char('T');
  1060  0176  3054               	movlw	84
  1061  0177  3186  26D7  3180   	fcall	_uart_char
  1062                           
  1063                           ;1840-c-tmr0.c: 257: uart_char('R');
  1064  017A  3052               	movlw	82
  1065  017B  3186  26D7  3180   	fcall	_uart_char
  1066                           
  1067                           ;1840-c-tmr0.c: 258: uart_char('>');
  1068  017E  303E               	movlw	62
  1069  017F  3186  26D7  3180   	fcall	_uart_char
  1070  0182  3001               	movlw	1
  1071  0183  0021               	movlb	1	; select bank1
  1072  0184  07B8               	addwf	vypisEEprom@i^(0+128),f
  1073  0185  3000               	movlw	0
  1074  0186  3DB9               	addwfc	(vypisEEprom@i+1)^(0+128),f
  1075  0187  0839               	movf	(vypisEEprom@i+1)^(0+128),w
  1076  0188  3A80               	xorlw	128
  1077  0189  00FF               	movwf	127
  1078  018A  3080               	movlw	128
  1079  018B  027F               	subwf	127,w
  1080  018C  1D03               	skipz
  1081  018D  2990               	goto	u1885
  1082  018E  3040               	movlw	64
  1083  018F  0238               	subwf	vypisEEprom@i^(0+128),w
  1084  0190                     u1885:	
  1085  0190  1C03               	skipc
  1086  0191  2884               	goto	l2570
  1087  0192                     l2600:	
  1088                           
  1089                           ;1840-c-tmr0.c: 260: }
  1090                           ;1840-c-tmr0.c: 262: uart_char('<');
  1091  0192  303C               	movlw	60
  1092  0193  3186  26D7  3180   	fcall	_uart_char
  1093                           
  1094                           ;1840-c-tmr0.c: 263: uart_char('/');
  1095  0196  302F               	movlw	47
  1096  0197  3186  26D7  3180   	fcall	_uart_char
  1097                           
  1098                           ;1840-c-tmr0.c: 264: uart_char('T');
  1099  019A  3054               	movlw	84
  1100  019B  3186  26D7  3180   	fcall	_uart_char
  1101                           
  1102                           ;1840-c-tmr0.c: 265: uart_char('A');
  1103  019E  3041               	movlw	65
  1104  019F  3186  26D7  3180   	fcall	_uart_char
  1105                           
  1106                           ;1840-c-tmr0.c: 266: uart_char('B');
  1107  01A2  3042               	movlw	66
  1108  01A3  3186  26D7  3180   	fcall	_uart_char
  1109                           
  1110                           ;1840-c-tmr0.c: 267: uart_char('L');
  1111  01A6  304C               	movlw	76
  1112  01A7  3186  26D7  3180   	fcall	_uart_char
  1113                           
  1114                           ;1840-c-tmr0.c: 268: uart_char('E');
  1115  01AA  3045               	movlw	69
  1116  01AB  3186  26D7  3180   	fcall	_uart_char
  1117                           
  1118                           ;1840-c-tmr0.c: 269: uart_char('>');
  1119  01AE  303E               	movlw	62
  1120  01AF  3186  26D7         	fcall	_uart_char
  1121                           
  1122                           ;1840-c-tmr0.c: 271: INTCONbits.T0IE = 1;
  1123  01B1  168B               	bsf	11,5	;volatile
  1124                           
  1125                           ;1840-c-tmr0.c: 272: (GIE = 1);
  1126  01B2  178B               	bsf	11,7	;volatile
  1127  01B3  0008               	return
  1128  01B4                     __end_of_vypisEEprom:	
  1129                           
  1130                           	psect	text2
  1131  01B4                     __ptext2:	
  1132 ;; *************** function _uart_3numb *****************
  1133 ;; Defined at:
  1134 ;;		line 323 in file "mojeFce1840-01.h"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;  num3            2    8[BANK1 ] int 
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;  i100            2   18[BANK1 ] int 
  1139 ;;  i10             2   16[BANK1 ] int 
  1140 ;;  i1              2   14[BANK1 ] int 
  1141 ;; Return value:  Size  Location     Type
  1142 ;;		None               void
  1143 ;; Registers used:
  1144 ;;		wreg, status,2, status,0, pclath, cstack
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1150 ;;      Params:         0       0       2       0
  1151 ;;      Locals:         0       0       6       0
  1152 ;;      Temps:          0       0       4       0
  1153 ;;      Totals:         0       0      12       0
  1154 ;;Total ram usage:       12 bytes
  1155 ;; Hardware stack levels used:    1
  1156 ;; Hardware stack levels required when called:    8
  1157 ;; This function calls:
  1158 ;;		___awdiv
  1159 ;;		___wmul
  1160 ;;		_uart_1numb
  1161 ;; This function is called by:
  1162 ;;		_vypisEEprom
  1163 ;; This function uses a non-reentrant model
  1164 ;;
  1165                           
  1166                           
  1167                           ;psect for function _uart_3numb
  1168  01B4                     _uart_3numb:	
  1169                           
  1170                           ;mojeFce1840-01.h: 325: int i100= (num3/100);
  1171                           
  1172                           ;incstack = 0
  1173                           ; Regs used in _uart_3numb: [wreg+status,2+status,0+pclath+cstack]
  1174  01B4  3064               	movlw	100
  1175  01B5  0021               	movlb	1	; select bank1
  1176  01B6  00A0               	movwf	___awdiv@divisor^(0+128)
  1177  01B7  3000               	movlw	0
  1178  01B8  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
  1179  01B9  0829               	movf	(uart_3numb@num3+1)^(0+128),w
  1180  01BA  01A3               	clrf	(___awdiv@dividend+1)^(0+128)
  1181  01BB  07A3               	addwf	(___awdiv@dividend+1)^(0+128),f
  1182  01BC  0828               	movf	uart_3numb@num3^(0+128),w
  1183  01BD  01A2               	clrf	___awdiv@dividend^(0+128)
  1184  01BE  07A2               	addwf	___awdiv@dividend^(0+128),f
  1185  01BF  3183  238D  3181   	fcall	___awdiv
  1186  01C2  0021               	movlb	1	; select bank1
  1187  01C3  0821               	movf	(?___awdiv+1)^(0+128),w
  1188  01C4  01B3               	clrf	(uart_3numb@i100+1)^(0+128)
  1189  01C5  07B3               	addwf	(uart_3numb@i100+1)^(0+128),f
  1190  01C6  0820               	movf	?___awdiv^(0+128),w
  1191  01C7  01B2               	clrf	uart_3numb@i100^(0+128)
  1192  01C8  07B2               	addwf	uart_3numb@i100^(0+128),f
  1193                           
  1194                           ;mojeFce1840-01.h: 326: int i10 = (num3-i100*100)/10;
  1195  01C9  300A               	movlw	10
  1196  01CA  00A0               	movwf	___awdiv@divisor^(0+128)
  1197  01CB  3000               	movlw	0
  1198  01CC  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
  1199  01CD  0833               	movf	(uart_3numb@i100+1)^(0+128),w
  1200  01CE  0020               	movlb	0	; select bank0
  1201  01CF  01B9               	clrf	___wmul@multiplier+1
  1202  01D0  07B9               	addwf	___wmul@multiplier+1,f
  1203  01D1  0021               	movlb	1	; select bank1
  1204  01D2  0832               	movf	uart_3numb@i100^(0+128),w
  1205  01D3  0020               	movlb	0	; select bank0
  1206  01D4  01B8               	clrf	___wmul@multiplier
  1207  01D5  07B8               	addwf	___wmul@multiplier,f
  1208  01D6  3064               	movlw	100
  1209  01D7  00BA               	movwf	___wmul@multiplicand
  1210  01D8  3000               	movlw	0
  1211  01D9  00BB               	movwf	___wmul@multiplicand+1
  1212  01DA  3186  2697  3181   	fcall	___wmul
  1213  01DD  0020               	movlb	0	; select bank0
  1214  01DE  0938               	comf	?___wmul,w
  1215  01DF  0021               	movlb	1	; select bank1
  1216  01E0  00AA               	movwf	??_uart_3numb^(0+128)
  1217  01E1  0020               	movlb	0	; select bank0
  1218  01E2  0939               	comf	?___wmul+1,w
  1219  01E3  0021               	movlb	1	; select bank1
  1220  01E4  00AB               	movwf	(??_uart_3numb^(0+128)+1)
  1221  01E5  0AAA               	incf	??_uart_3numb^(0+128),f
  1222  01E6  1903               	skipnz
  1223  01E7  0AAB               	incf	(??_uart_3numb^(0+128)+1),f
  1224  01E8  0828               	movf	uart_3numb@num3^(0+128),w
  1225  01E9  072A               	addwf	??_uart_3numb^(0+128),w
  1226  01EA  00A2               	movwf	___awdiv@dividend^(0+128)
  1227  01EB  0829               	movf	(uart_3numb@num3+1)^(0+128),w
  1228  01EC  3D2B               	addwfc	(??_uart_3numb+1)^(0+128),w
  1229  01ED  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
  1230  01EE  3183  238D  3181   	fcall	___awdiv
  1231  01F1  0021               	movlb	1	; select bank1
  1232  01F2  0821               	movf	(?___awdiv+1)^(0+128),w
  1233  01F3  01B1               	clrf	(uart_3numb@i10+1)^(0+128)
  1234  01F4  07B1               	addwf	(uart_3numb@i10+1)^(0+128),f
  1235  01F5  0820               	movf	?___awdiv^(0+128),w
  1236  01F6  01B0               	clrf	uart_3numb@i10^(0+128)
  1237  01F7  07B0               	addwf	uart_3numb@i10^(0+128),f
  1238                           
  1239                           ;mojeFce1840-01.h: 327: int i1 = num3-i100*100-i10*10;
  1240  01F8  0833               	movf	(uart_3numb@i100+1)^(0+128),w
  1241  01F9  0020               	movlb	0	; select bank0
  1242  01FA  01B9               	clrf	___wmul@multiplier+1
  1243  01FB  07B9               	addwf	___wmul@multiplier+1,f
  1244  01FC  0021               	movlb	1	; select bank1
  1245  01FD  0832               	movf	uart_3numb@i100^(0+128),w
  1246  01FE  0020               	movlb	0	; select bank0
  1247  01FF  01B8               	clrf	___wmul@multiplier
  1248  0200  07B8               	addwf	___wmul@multiplier,f
  1249  0201  3064               	movlw	100
  1250  0202  00BA               	movwf	___wmul@multiplicand
  1251  0203  3000               	movlw	0
  1252  0204  00BB               	movwf	___wmul@multiplicand+1
  1253  0205  3186  2697  3181   	fcall	___wmul
  1254  0208  0020               	movlb	0	; select bank0
  1255  0209  0838               	movf	?___wmul,w
  1256  020A  0021               	movlb	1	; select bank1
  1257  020B  00AA               	movwf	??_uart_3numb^(0+128)
  1258  020C  0020               	movlb	0	; select bank0
  1259  020D  0839               	movf	?___wmul+1,w
  1260  020E  0021               	movlb	1	; select bank1
  1261  020F  00AB               	movwf	(??_uart_3numb^(0+128)+1)
  1262  0210  0831               	movf	(uart_3numb@i10+1)^(0+128),w
  1263  0211  0020               	movlb	0	; select bank0
  1264  0212  01B9               	clrf	___wmul@multiplier+1
  1265  0213  07B9               	addwf	___wmul@multiplier+1,f
  1266  0214  0021               	movlb	1	; select bank1
  1267  0215  0830               	movf	uart_3numb@i10^(0+128),w
  1268  0216  0020               	movlb	0	; select bank0
  1269  0217  01B8               	clrf	___wmul@multiplier
  1270  0218  07B8               	addwf	___wmul@multiplier,f
  1271  0219  300A               	movlw	10
  1272  021A  00BA               	movwf	___wmul@multiplicand
  1273  021B  3000               	movlw	0
  1274  021C  00BB               	movwf	___wmul@multiplicand+1
  1275  021D  3186  2697  3181   	fcall	___wmul
  1276  0220  0020               	movlb	0	; select bank0
  1277  0221  0838               	movf	?___wmul,w
  1278  0222  0021               	movlb	1	; select bank1
  1279  0223  072A               	addwf	??_uart_3numb^(0+128),w
  1280  0224  00AC               	movwf	(??_uart_3numb+2)^(0+128)
  1281  0225  0020               	movlb	0	; select bank0
  1282  0226  0839               	movf	?___wmul+1,w
  1283  0227  0021               	movlb	1	; select bank1
  1284  0228  3D2B               	addwfc	(??_uart_3numb+1)^(0+128),w
  1285  0229  00AD               	movwf	(??_uart_3numb+3)^(0+128)
  1286  022A  09AC               	comf	(??_uart_3numb+2)^(0+128),f
  1287  022B  09AD               	comf	((??_uart_3numb+2)^(0+128)+1),f
  1288  022C  0AAC               	incf	(??_uart_3numb+2)^(0+128),f
  1289  022D  1903               	skipnz
  1290  022E  0AAD               	incf	((??_uart_3numb+2)^(0+128)+1),f
  1291  022F  0828               	movf	uart_3numb@num3^(0+128),w
  1292  0230  072C               	addwf	(??_uart_3numb+2)^(0+128),w
  1293  0231  00AE               	movwf	uart_3numb@i1^(0+128)
  1294  0232  0829               	movf	(uart_3numb@num3+1)^(0+128),w
  1295  0233  3D2D               	addwfc	(??_uart_3numb+3)^(0+128),w
  1296  0234  00AF               	movwf	(uart_3numb@i1+1)^(0+128)
  1297                           
  1298                           ;mojeFce1840-01.h: 328: uart_1numb(i100);
  1299  0235  0833               	movf	(uart_3numb@i100+1)^(0+128),w
  1300  0236  0020               	movlb	0	; select bank0
  1301  0237  01BA               	clrf	uart_1numb@num+1
  1302  0238  07BA               	addwf	uart_1numb@num+1,f
  1303  0239  0021               	movlb	1	; select bank1
  1304  023A  0832               	movf	uart_3numb@i100^(0+128),w
  1305  023B  0020               	movlb	0	; select bank0
  1306  023C  01B9               	clrf	uart_1numb@num
  1307  023D  07B9               	addwf	uart_1numb@num,f
  1308  023E  3186  26EC  3181   	fcall	_uart_1numb
  1309                           
  1310                           ;mojeFce1840-01.h: 329: uart_1numb(i10);
  1311  0241  0021               	movlb	1	; select bank1
  1312  0242  0831               	movf	(uart_3numb@i10+1)^(0+128),w
  1313  0243  0020               	movlb	0	; select bank0
  1314  0244  01BA               	clrf	uart_1numb@num+1
  1315  0245  07BA               	addwf	uart_1numb@num+1,f
  1316  0246  0021               	movlb	1	; select bank1
  1317  0247  0830               	movf	uart_3numb@i10^(0+128),w
  1318  0248  0020               	movlb	0	; select bank0
  1319  0249  01B9               	clrf	uart_1numb@num
  1320  024A  07B9               	addwf	uart_1numb@num,f
  1321  024B  3186  26EC  3181   	fcall	_uart_1numb
  1322                           
  1323                           ;mojeFce1840-01.h: 330: uart_1numb(i1);
  1324  024E  0021               	movlb	1	; select bank1
  1325  024F  082F               	movf	(uart_3numb@i1+1)^(0+128),w
  1326  0250  0020               	movlb	0	; select bank0
  1327  0251  01BA               	clrf	uart_1numb@num+1
  1328  0252  07BA               	addwf	uart_1numb@num+1,f
  1329  0253  0021               	movlb	1	; select bank1
  1330  0254  082E               	movf	uart_3numb@i1^(0+128),w
  1331  0255  0020               	movlb	0	; select bank0
  1332  0256  01B9               	clrf	uart_1numb@num
  1333  0257  07B9               	addwf	uart_1numb@num,f
  1334  0258  3186  26EC         	fcall	_uart_1numb
  1335  025A  0008               	return
  1336  025B                     __end_of_uart_3numb:	
  1337                           
  1338                           	psect	text3
  1339  06EC                     __ptext3:	
  1340 ;; *************** function _uart_1numb *****************
  1341 ;; Defined at:
  1342 ;;		line 318 in file "mojeFce1840-01.h"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;  num             2   25[BANK0 ] int 
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;		None
  1347 ;; Return value:  Size  Location     Type
  1348 ;;		None               void
  1349 ;; Registers used:
  1350 ;;		wreg, status,2, status,0, pclath, cstack
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1356 ;;      Params:         0       2       0       0
  1357 ;;      Locals:         0       0       0       0
  1358 ;;      Temps:          0       0       0       0
  1359 ;;      Totals:         0       2       0       0
  1360 ;;Total ram usage:        2 bytes
  1361 ;; Hardware stack levels used:    1
  1362 ;; Hardware stack levels required when called:    7
  1363 ;; This function calls:
  1364 ;;		_uart_char
  1365 ;; This function is called by:
  1366 ;;		_uart_3numb
  1367 ;;		_uart_numb
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           
  1372                           ;psect for function _uart_1numb
  1373  06EC                     _uart_1numb:	
  1374                           
  1375                           ;mojeFce1840-01.h: 320: uart_char(48+num);
  1376                           
  1377                           ;incstack = 0
  1378                           ; Regs used in _uart_1numb: [wreg+status,2+status,0+pclath+cstack]
  1379  06EC  0020               	movlb	0	; select bank0
  1380  06ED  0839               	movf	uart_1numb@num,w
  1381  06EE  3E30               	addlw	48
  1382  06EF  3186  26D7         	fcall	_uart_char
  1383  06F1  0008               	return
  1384  06F2                     __end_of_uart_1numb:	
  1385                           
  1386                           	psect	text4
  1387  06D7                     __ptext4:	
  1388 ;; *************** function _uart_char *****************
  1389 ;; Defined at:
  1390 ;;		line 290 in file "mojeFce1840-01.h"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;  data            1    wreg     unsigned char 
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;  data            1   24[BANK0 ] unsigned char 
  1395 ;; Return value:  Size  Location     Type
  1396 ;;		None               void
  1397 ;; Registers used:
  1398 ;;		wreg
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1404 ;;      Params:         0       0       0       0
  1405 ;;      Locals:         0       1       0       0
  1406 ;;      Temps:          0       0       0       0
  1407 ;;      Totals:         0       1       0       0
  1408 ;;Total ram usage:        1 bytes
  1409 ;; Hardware stack levels used:    1
  1410 ;; Hardware stack levels required when called:    6
  1411 ;; This function calls:
  1412 ;;		Nothing
  1413 ;; This function is called by:
  1414 ;;		_uart_1numb
  1415 ;;		_vypisEEprom
  1416 ;;		_uart_4numb
  1417 ;;		_uart_numb
  1418 ;;		_uart_newline
  1419 ;;		_uart_string
  1420 ;;		_uart_dump
  1421 ;;		_uart_stringln
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           
  1426                           ;psect for function _uart_char
  1427  06D7                     _uart_char:	
  1428                           
  1429                           ;incstack = 0
  1430                           ; Regs used in _uart_char: [wreg]
  1431                           ;uart_char@data stored from wreg
  1432  06D7  0020               	movlb	0	; select bank0
  1433  06D8  00B8               	movwf	uart_char@data
  1434                           
  1435                           ;mojeFce1840-01.h: 293: TXREG = data;
  1436  06D9  0838               	movf	uart_char@data,w
  1437  06DA  0023               	movlb	3	; select bank3
  1438  06DB  009A               	movwf	26	;volatile
  1439  06DC                     l158:	
  1440                           ;mojeFce1840-01.h: 295: while(!TXSTAbits.TRMT);
  1441                           
  1442  06DC  189E               	btfsc	30,1	;volatile
  1443  06DD  0008               	return
  1444  06DE  2EDC               	goto	l158
  1445  06DF                     __end_of_uart_char:	
  1446                           
  1447                           	psect	text5
  1448  0697                     __ptext5:	
  1449 ;; *************** function ___wmul *****************
  1450 ;; Defined at:
  1451 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\wmul.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;  multiplier      2   24[BANK0 ] unsigned int 
  1454 ;;  multiplicand    2   26[BANK0 ] unsigned int 
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;  product         2   28[BANK0 ] unsigned int 
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  2   24[BANK0 ] unsigned int 
  1459 ;; Registers used:
  1460 ;;		wreg, status,2, status,0
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1466 ;;      Params:         0       4       0       0
  1467 ;;      Locals:         0       2       0       0
  1468 ;;      Temps:          0       0       0       0
  1469 ;;      Totals:         0       6       0       0
  1470 ;;Total ram usage:        6 bytes
  1471 ;; Hardware stack levels used:    1
  1472 ;; Hardware stack levels required when called:    6
  1473 ;; This function calls:
  1474 ;;		Nothing
  1475 ;; This function is called by:
  1476 ;;		_uart_3numb
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480                           
  1481                           ;psect for function ___wmul
  1482  0697                     ___wmul:	
  1483                           
  1484                           ;incstack = 0
  1485                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1486  0697  0020               	movlb	0	; select bank0
  1487  0698  01BC               	clrf	___wmul@product
  1488  0699  01BD               	clrf	___wmul@product+1
  1489  069A                     l2652:	
  1490  069A  1C38               	btfss	___wmul@multiplier,0
  1491  069B  2EA0               	goto	l748
  1492  069C  083A               	movf	___wmul@multiplicand,w
  1493  069D  07BC               	addwf	___wmul@product,f
  1494  069E  083B               	movf	___wmul@multiplicand+1,w
  1495  069F  3DBD               	addwfc	___wmul@product+1,f
  1496  06A0                     l748:	
  1497  06A0  3001               	movlw	1
  1498  06A1                     u2005:	
  1499  06A1  35BA               	lslf	___wmul@multiplicand,f
  1500  06A2  0DBB               	rlf	___wmul@multiplicand+1,f
  1501  06A3  0B89               	decfsz	9,f
  1502  06A4  2EA1               	goto	u2005
  1503  06A5  3001               	movlw	1
  1504  06A6                     u2015:	
  1505  06A6  36B9               	lsrf	___wmul@multiplier+1,f
  1506  06A7  0CB8               	rrf	___wmul@multiplier,f
  1507  06A8  0B89               	decfsz	9,f
  1508  06A9  2EA6               	goto	u2015
  1509  06AA  0839               	movf	___wmul@multiplier+1,w
  1510  06AB  0438               	iorwf	___wmul@multiplier,w
  1511  06AC  1D03               	skipz
  1512  06AD  2E9A               	goto	l2652
  1513  06AE  083D               	movf	___wmul@product+1,w
  1514  06AF  01B9               	clrf	?___wmul+1
  1515  06B0  07B9               	addwf	?___wmul+1,f
  1516  06B1  083C               	movf	___wmul@product,w
  1517  06B2  01B8               	clrf	?___wmul
  1518  06B3  07B8               	addwf	?___wmul,f
  1519  06B4  0008               	return
  1520  06B5                     __end_of___wmul:	
  1521                           
  1522                           	psect	text6
  1523  038D                     __ptext6:	
  1524 ;; *************** function ___awdiv *****************
  1525 ;; Defined at:
  1526 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\awdiv.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;  divisor         2    0[BANK1 ] int 
  1529 ;;  dividend        2    2[BANK1 ] int 
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;  quotient        2    6[BANK1 ] int 
  1532 ;;  sign            1    5[BANK1 ] unsigned char 
  1533 ;;  counter         1    4[BANK1 ] unsigned char 
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  2    0[BANK1 ] int 
  1536 ;; Registers used:
  1537 ;;		wreg, status,2, status,0
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1543 ;;      Params:         0       0       4       0
  1544 ;;      Locals:         0       0       4       0
  1545 ;;      Temps:          0       1       0       0
  1546 ;;      Totals:         0       1       8       0
  1547 ;;Total ram usage:        9 bytes
  1548 ;; Hardware stack levels used:    1
  1549 ;; Hardware stack levels required when called:    6
  1550 ;; This function calls:
  1551 ;;		Nothing
  1552 ;; This function is called by:
  1553 ;;		_uart_3numb
  1554 ;;		_uart_4numb
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           
  1559                           ;psect for function ___awdiv
  1560  038D                     ___awdiv:	
  1561                           
  1562                           ;incstack = 0
  1563                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1564  038D  0021               	movlb	1	; select bank1
  1565  038E  01A5               	clrf	___awdiv@sign^(0+128)
  1566  038F  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
  1567  0390  2B98               	goto	l2614
  1568  0391  09A0               	comf	___awdiv@divisor^(0+128),f
  1569  0392  09A1               	comf	(___awdiv@divisor+1)^(0+128),f
  1570  0393  0AA0               	incf	___awdiv@divisor^(0+128),f
  1571  0394  1903               	skipnz
  1572  0395  0AA1               	incf	(___awdiv@divisor+1)^(0+128),f
  1573  0396  01A5               	clrf	___awdiv@sign^(0+128)
  1574  0397  0AA5               	incf	___awdiv@sign^(0+128),f
  1575  0398                     l2614:	
  1576  0398  1FA3               	btfss	(___awdiv@dividend+1)^(0+128),7
  1577  0399  2BA5               	goto	l2620
  1578  039A  09A2               	comf	___awdiv@dividend^(0+128),f
  1579  039B  09A3               	comf	(___awdiv@dividend+1)^(0+128),f
  1580  039C  0AA2               	incf	___awdiv@dividend^(0+128),f
  1581  039D  1903               	skipnz
  1582  039E  0AA3               	incf	(___awdiv@dividend+1)^(0+128),f
  1583  039F  3001               	movlw	1
  1584  03A0  0020               	movlb	0	; select bank0
  1585  03A1  00BE               	movwf	??___awdiv
  1586  03A2  083E               	movf	??___awdiv,w
  1587  03A3  0021               	movlb	1	; select bank1
  1588  03A4  06A5               	xorwf	___awdiv@sign^(0+128),f
  1589  03A5                     l2620:	
  1590  03A5  01A6               	clrf	___awdiv@quotient^(0+128)
  1591  03A6  01A7               	clrf	(___awdiv@quotient+1)^(0+128)
  1592  03A7  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  1593  03A8  0420               	iorwf	___awdiv@divisor^(0+128),w
  1594  03A9  1903               	skipnz
  1595  03AA  2BD6               	goto	l2642
  1596  03AB  01A4               	clrf	___awdiv@counter^(0+128)
  1597  03AC  0AA4               	incf	___awdiv@counter^(0+128),f
  1598  03AD                     l2630:	
  1599  03AD  1BA1               	btfsc	(___awdiv@divisor+1)^(0+128),7
  1600  03AE  2BBB               	goto	l2632
  1601  03AF  3001               	movlw	1
  1602  03B0                     u1925:	
  1603  03B0  35A0               	lslf	___awdiv@divisor^(0+128),f
  1604  03B1  0DA1               	rlf	(___awdiv@divisor+1)^(0+128),f
  1605  03B2  0B89               	decfsz	9,f
  1606  03B3  2BB0               	goto	u1925
  1607  03B4  3001               	movlw	1
  1608  03B5  0020               	movlb	0	; select bank0
  1609  03B6  00BE               	movwf	??___awdiv
  1610  03B7  083E               	movf	??___awdiv,w
  1611  03B8  0021               	movlb	1	; select bank1
  1612  03B9  07A4               	addwf	___awdiv@counter^(0+128),f
  1613  03BA  2BAD               	goto	l2630
  1614  03BB                     l2632:	
  1615  03BB  3001               	movlw	1
  1616  03BC                     u1945:	
  1617  03BC  35A6               	lslf	___awdiv@quotient^(0+128),f
  1618  03BD  0DA7               	rlf	(___awdiv@quotient+1)^(0+128),f
  1619  03BE  0B89               	decfsz	9,f
  1620  03BF  2BBC               	goto	u1945
  1621  03C0  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  1622  03C1  0223               	subwf	(___awdiv@dividend+1)^(0+128),w
  1623  03C2  1D03               	skipz
  1624  03C3  2BC6               	goto	u1955
  1625  03C4  0820               	movf	___awdiv@divisor^(0+128),w
  1626  03C5  0222               	subwf	___awdiv@dividend^(0+128),w
  1627  03C6                     u1955:	
  1628  03C6  1C03               	skipc
  1629  03C7  2BCD               	goto	l2638
  1630  03C8  0820               	movf	___awdiv@divisor^(0+128),w
  1631  03C9  02A2               	subwf	___awdiv@dividend^(0+128),f
  1632  03CA  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  1633  03CB  3BA3               	subwfb	(___awdiv@dividend+1)^(0+128),f
  1634  03CC  1426               	bsf	___awdiv@quotient^(0+128),0
  1635  03CD                     l2638:	
  1636  03CD  3001               	movlw	1
  1637  03CE                     u1965:	
  1638  03CE  36A1               	lsrf	(___awdiv@divisor+1)^(0+128),f
  1639  03CF  0CA0               	rrf	___awdiv@divisor^(0+128),f
  1640  03D0  0B89               	decfsz	9,f
  1641  03D1  2BCE               	goto	u1965
  1642  03D2  3001               	movlw	1
  1643  03D3  02A4               	subwf	___awdiv@counter^(0+128),f
  1644  03D4  1D03               	btfss	3,2
  1645  03D5  2BBB               	goto	l2632
  1646  03D6                     l2642:	
  1647  03D6  0825               	movf	___awdiv@sign^(0+128),w
  1648  03D7  1903               	btfsc	3,2
  1649  03D8  2BDE               	goto	l2646
  1650  03D9  09A6               	comf	___awdiv@quotient^(0+128),f
  1651  03DA  09A7               	comf	(___awdiv@quotient+1)^(0+128),f
  1652  03DB  0AA6               	incf	___awdiv@quotient^(0+128),f
  1653  03DC  1903               	skipnz
  1654  03DD  0AA7               	incf	(___awdiv@quotient+1)^(0+128),f
  1655  03DE                     l2646:	
  1656  03DE  0827               	movf	(___awdiv@quotient+1)^(0+128),w
  1657  03DF  01A1               	clrf	(?___awdiv+1)^(0+128)
  1658  03E0  07A1               	addwf	(?___awdiv+1)^(0+128),f
  1659  03E1  0826               	movf	___awdiv@quotient^(0+128),w
  1660  03E2  01A0               	clrf	?___awdiv^(0+128)
  1661  03E3  07A0               	addwf	?___awdiv^(0+128),f
  1662  03E4  0008               	return
  1663  03E5                     __end_of___awdiv:	
  1664                           
  1665                           	psect	text7
  1666  06F2                     __ptext7:	
  1667 ;; *************** function _uart_init600 *****************
  1668 ;; Defined at:
  1669 ;;		line 235 in file "mojeFce1840-01.h"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;		None
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;		None
  1674 ;; Return value:  Size  Location     Type
  1675 ;;		None               void
  1676 ;; Registers used:
  1677 ;;		wreg, status,2, status,0, pclath, cstack
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1683 ;;      Params:         0       0       0       0
  1684 ;;      Locals:         0       0       0       0
  1685 ;;      Temps:          0       0       0       0
  1686 ;;      Totals:         0       0       0       0
  1687 ;;Total ram usage:        0 bytes
  1688 ;; Hardware stack levels used:    1
  1689 ;; Hardware stack levels required when called:    7
  1690 ;; This function calls:
  1691 ;;		_uart_init
  1692 ;; This function is called by:
  1693 ;;		_main
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696                           
  1697                           
  1698                           ;psect for function _uart_init600
  1699  06F2                     _uart_init600:	
  1700                           
  1701                           ;mojeFce1840-01.h: 238: if (4000000 == 4000000)
  1702                           
  1703                           ;incstack = 0
  1704                           ; Regs used in _uart_init600: [wreg+status,2+status,0+pclath+cstack]
  1705  06F2  3186  26B5         	fcall	_uart_init
  1706                           
  1707                           ;mojeFce1840-01.h: 239: {
  1708                           ;mojeFce1840-01.h: 240: SPBRG = 103;
  1709  06F4  3067               	movlw	103
  1710  06F5  0023               	movlb	3	; select bank3
  1711  06F6  009B               	movwf	27	;volatile
  1712                           
  1713                           ;mojeFce1840-01.h: 241: }
  1714                           ;mojeFce1840-01.h: 243: if (4000000 == 8000000)
  1715  06F7  0008               	return
  1716  06F8                     __end_of_uart_init600:	
  1717                           ;mojeFce1840-01.h: 244: {
  1718                           ;mojeFce1840-01.h: 245: SPBRG = 206;
  1719                           
  1720                           
  1721                           	psect	text8
  1722  06B5                     __ptext8:	
  1723 ;; *************** function _uart_init *****************
  1724 ;; Defined at:
  1725 ;;		line 164 in file "mojeFce1840-01.h"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;		None
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;		None
  1730 ;; Return value:  Size  Location     Type
  1731 ;;		None               void
  1732 ;; Registers used:
  1733 ;;		wreg, status,2
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1739 ;;      Params:         0       0       0       0
  1740 ;;      Locals:         0       0       0       0
  1741 ;;      Temps:          0       0       0       0
  1742 ;;      Totals:         0       0       0       0
  1743 ;;Total ram usage:        0 bytes
  1744 ;; Hardware stack levels used:    1
  1745 ;; Hardware stack levels required when called:    6
  1746 ;; This function calls:
  1747 ;;		Nothing
  1748 ;; This function is called by:
  1749 ;;		_uart_init600
  1750 ;;		_uart_init2400
  1751 ;;		_uart_init9600
  1752 ;;		_uart_init19200
  1753 ;;		_uart_init57600
  1754 ;;		_uart_init300
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           
  1759                           ;psect for function _uart_init
  1760  06B5                     _uart_init:	
  1761                           
  1762                           ;mojeFce1840-01.h: 166: APFCONbits.TXCKSEL = 1;
  1763                           
  1764                           ;incstack = 0
  1765                           ; Regs used in _uart_init: [wreg+status,2]
  1766  06B5  0022               	movlb	2	; select bank2
  1767  06B6  151D               	bsf	29,2	;volatile
  1768                           
  1769                           ;mojeFce1840-01.h: 168: TXSTAbits.TXEN =1;
  1770  06B7  0023               	movlb	3	; select bank3
  1771  06B8  169E               	bsf	30,5	;volatile
  1772                           
  1773                           ;mojeFce1840-01.h: 169: TXSTAbits.SYNC=0;
  1774  06B9  121E               	bcf	30,4	;volatile
  1775                           
  1776                           ;mojeFce1840-01.h: 170: RCSTAbits.SPEN = 1;
  1777  06BA  179D               	bsf	29,7	;volatile
  1778                           
  1779                           ;mojeFce1840-01.h: 175: TXSTAbits.TX9=0;
  1780  06BB  131E               	bcf	30,6	;volatile
  1781                           
  1782                           ;mojeFce1840-01.h: 176: TXSTAbits.TRMT=1;
  1783  06BC  149E               	bsf	30,1	;volatile
  1784                           
  1785                           ;mojeFce1840-01.h: 177: TXSTAbits.CSRC=0;
  1786  06BD  139E               	bcf	30,7	;volatile
  1787                           
  1788                           ;mojeFce1840-01.h: 178: TXSTAbits.BRGH=0;
  1789  06BE  111E               	bcf	30,2	;volatile
  1790                           
  1791                           ;mojeFce1840-01.h: 179: BAUDCONbits.BRG16=0;
  1792  06BF  119F               	bcf	31,3	;volatile
  1793                           
  1794                           ;mojeFce1840-01.h: 180: RCSTAbits.RX9=0;
  1795  06C0  131D               	bcf	29,6	;volatile
  1796                           
  1797                           ;mojeFce1840-01.h: 181: RCSTAbits.CREN = 0;
  1798  06C1  121D               	bcf	29,4	;volatile
  1799                           
  1800                           ;mojeFce1840-01.h: 183: SPBRGH =0;
  1801  06C2  019C               	clrf	28	;volatile
  1802                           
  1803                           ;mojeFce1840-01.h: 184: SPBRG = 25;
  1804  06C3  3019               	movlw	25
  1805  06C4  009B               	movwf	27	;volatile
  1806  06C5  0008               	return
  1807  06C6                     __end_of_uart_init:	
  1808                           
  1809                           	psect	text9
  1810  048F                     __ptext9:	
  1811 ;; *************** function _init *****************
  1812 ;; Defined at:
  1813 ;;		line 67 in file "1840-c-tmr0.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;		None
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;		None
  1818 ;; Return value:  Size  Location     Type
  1819 ;;		None               void
  1820 ;; Registers used:
  1821 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1827 ;;      Params:         0       0       0       0
  1828 ;;      Locals:         0       0       0       0
  1829 ;;      Temps:          0       0       3       0
  1830 ;;      Totals:         0       0       3       0
  1831 ;;Total ram usage:        3 bytes
  1832 ;; Hardware stack levels used:    1
  1833 ;; Hardware stack levels required when called:    7
  1834 ;; This function calls:
  1835 ;;		_beep
  1836 ;;		_beep2
  1837 ;;		_set4mhz
  1838 ;; This function is called by:
  1839 ;;		_main
  1840 ;; This function uses a non-reentrant model
  1841 ;;
  1842                           
  1843                           
  1844                           ;psect for function _init
  1845  048F                     _init:	
  1846                           
  1847                           ;1840-c-tmr0.c: 70: set4mhz();
  1848                           
  1849                           ;incstack = 0
  1850                           ; Regs used in _init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1851  048F  3187  2701  3184   	fcall	_set4mhz
  1852                           
  1853                           ;1840-c-tmr0.c: 73: PORTA = 0;
  1854  0492  0020               	movlb	0	; select bank0
  1855  0493  018C               	clrf	12	;volatile
  1856                           
  1857                           ;1840-c-tmr0.c: 76: TRISA = 1<<0 | 1<<5;
  1858  0494  3021               	movlw	33
  1859  0495  0021               	movlb	1	; select bank1
  1860  0496  008C               	movwf	12	;volatile
  1861                           
  1862                           ;1840-c-tmr0.c: 78: ADCON0 = 0;
  1863  0497  019D               	clrf	29	;volatile
  1864                           
  1865                           ;1840-c-tmr0.c: 80: ANSELA = 0;
  1866  0498  0023               	movlb	3	; select bank3
  1867  0499  018C               	clrf	12	;volatile
  1868                           
  1869                           ;1840-c-tmr0.c: 81: CM1CON0 = 0;
  1870  049A  0022               	movlb	2	; select bank2
  1871  049B  0191               	clrf	17	;volatile
  1872                           
  1873                           ;1840-c-tmr0.c: 82: CPSCON0 = 0;
  1874  049C  0020               	movlb	0	; select bank0
  1875  049D  019E               	clrf	30	;volatile
  1876                           
  1877                           ;1840-c-tmr0.c: 85: beep(2);
  1878  049E  3002               	movlw	2
  1879  049F  00B8               	movwf	beep@co
  1880  04A0  3000               	movlw	0
  1881  04A1  00B9               	movwf	beep@co+1
  1882  04A2  3185  254B  3184   	fcall	_beep
  1883                           
  1884                           ;1840-c-tmr0.c: 86: _delay((unsigned long)((500)*(4000000/4000.0)));
  1885  04A5  3003               	movlw	3
  1886  04A6  0021               	movlb	1	; select bank1
  1887  04A7  00A2               	movwf	(??_init^(0+128)+2)
  1888  04A8  308A               	movlw	138
  1889  04A9  00A1               	movwf	(??_init^(0+128)+1)
  1890  04AA  3056               	movlw	86
  1891  04AB  00A0               	movwf	??_init^(0+128)
  1892  04AC                     u2037:	
  1893  04AC  0BA0               	decfsz	??_init^(0+128),f
  1894  04AD  2CAC               	goto	u2037
  1895  04AE  0BA1               	decfsz	(??_init^(0+128)+1),f
  1896  04AF  2CAC               	goto	u2037
  1897  04B0  0BA2               	decfsz	(??_init^(0+128)+2),f
  1898  04B1  2CAC               	goto	u2037
  1899  04B2  2CB3               	nop2
  1900                           
  1901                           ;1840-c-tmr0.c: 87: beep2(2);
  1902  04B3  3002               	movlw	2
  1903  04B4  0020               	movlb	0	; select bank0
  1904  04B5  00B8               	movwf	beep2@co
  1905  04B6  3000               	movlw	0
  1906  04B7  00B9               	movwf	beep2@co+1
  1907  04B8  3185  25F9  3184   	fcall	_beep2
  1908                           
  1909                           ;1840-c-tmr0.c: 88: _delay((unsigned long)((500)*(4000000/4000.0)));
  1910  04BB  3003               	movlw	3
  1911  04BC  0021               	movlb	1	; select bank1
  1912  04BD  00A2               	movwf	(??_init^(0+128)+2)
  1913  04BE  308A               	movlw	138
  1914  04BF  00A1               	movwf	(??_init^(0+128)+1)
  1915  04C0  3056               	movlw	86
  1916  04C1  00A0               	movwf	??_init^(0+128)
  1917  04C2                     u2047:	
  1918  04C2  0BA0               	decfsz	??_init^(0+128),f
  1919  04C3  2CC2               	goto	u2047
  1920  04C4  0BA1               	decfsz	(??_init^(0+128)+1),f
  1921  04C5  2CC2               	goto	u2047
  1922  04C6  0BA2               	decfsz	(??_init^(0+128)+2),f
  1923  04C7  2CC2               	goto	u2047
  1924  04C8  2CC9               	nop2
  1925                           
  1926                           ;1840-c-tmr0.c: 91: OPTION_REGbits.T0CS = 0;
  1927  04C9  0021               	movlb	1	; select bank1
  1928  04CA  1295               	bcf	21,5	;volatile
  1929                           
  1930                           ;1840-c-tmr0.c: 92: OPTION_REGbits.PSA = 1;
  1931  04CB  1595               	bsf	21,3	;volatile
  1932                           
  1933                           ;1840-c-tmr0.c: 95: INTCONbits.T0IE = 1;
  1934  04CC  168B               	bsf	11,5	;volatile
  1935                           
  1936                           ;1840-c-tmr0.c: 96: (GIE = 1);
  1937  04CD  178B               	bsf	11,7	;volatile
  1938  04CE  0008               	return
  1939  04CF                     __end_of_init:	
  1940                           
  1941                           	psect	text10
  1942  0701                     __ptext10:	
  1943 ;; *************** function _set4mhz *****************
  1944 ;; Defined at:
  1945 ;;		line 24 in file "mojeFce1840-01.h"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;		None
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;		None
  1950 ;; Return value:  Size  Location     Type
  1951 ;;		None               void
  1952 ;; Registers used:
  1953 ;;		wreg
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1959 ;;      Params:         0       0       0       0
  1960 ;;      Locals:         0       0       0       0
  1961 ;;      Temps:          0       0       0       0
  1962 ;;      Totals:         0       0       0       0
  1963 ;;Total ram usage:        0 bytes
  1964 ;; Hardware stack levels used:    1
  1965 ;; Hardware stack levels required when called:    6
  1966 ;; This function calls:
  1967 ;;		Nothing
  1968 ;; This function is called by:
  1969 ;;		_init
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           
  1974                           ;psect for function _set4mhz
  1975  0701                     _set4mhz:	
  1976                           
  1977                           ;mojeFce1840-01.h: 31: OSCCON = 0x68;
  1978                           
  1979                           ;incstack = 0
  1980                           ; Regs used in _set4mhz: [wreg]
  1981  0701  3068               	movlw	104
  1982  0702  0021               	movlb	1	; select bank1
  1983  0703  0099               	movwf	25	;volatile
  1984  0704  0008               	return
  1985  0705                     __end_of_set4mhz:	
  1986                           
  1987                           	psect	text11
  1988  05F9                     __ptext11:	
  1989 ;; *************** function _beep2 *****************
  1990 ;; Defined at:
  1991 ;;		line 108 in file "mojeFce1840-01.h"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;  co              2   24[BANK0 ] int 
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;  p               2   28[BANK0 ] int 
  1996 ;; Return value:  Size  Location     Type
  1997 ;;		None               void
  1998 ;; Registers used:
  1999 ;;		wreg, status,2, status,0, btemp+1
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2005 ;;      Params:         0       2       0       0
  2006 ;;      Locals:         0       2       0       0
  2007 ;;      Temps:          0       2       0       0
  2008 ;;      Totals:         0       6       0       0
  2009 ;;Total ram usage:        6 bytes
  2010 ;; Hardware stack levels used:    1
  2011 ;; Hardware stack levels required when called:    6
  2012 ;; This function calls:
  2013 ;;		Nothing
  2014 ;; This function is called by:
  2015 ;;		_init
  2016 ;;		_main
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020                           
  2021                           ;psect for function _beep2
  2022  05F9                     _beep2:	
  2023                           
  2024                           ;mojeFce1840-01.h: 110: int p;
  2025                           ;mojeFce1840-01.h: 111: for(p=0;p<50; p++)
  2026                           
  2027                           ;incstack = 0
  2028                           ; Regs used in _beep2: [wreg+status,2+status,0+btemp+1]
  2029  05F9  0020               	movlb	0	; select bank0
  2030  05FA  01BC               	clrf	beep2@p
  2031  05FB  01BD               	clrf	beep2@p+1
  2032  05FC                     L1:	
  2033  05FC  083D               	movf	beep2@p+1,w
  2034  05FD  3A80               	xorlw	128
  2035  05FE  00FF               	movwf	127
  2036  05FF  3080               	movlw	128
  2037  0600  027F               	subwf	127,w
  2038  0601  1D03               	skipz
  2039  0602  2E05               	goto	u1095
  2040  0603  3032               	movlw	50
  2041  0604  023C               	subwf	beep2@p,w
  2042  0605                     u1095:	
  2043  0605  1803               	btfsc	3,0
  2044  0606  0008               	return
  2045                           
  2046                           ;mojeFce1840-01.h: 112: {
  2047                           ;mojeFce1840-01.h: 113: ((PORTA) |=(1<<(co));
  2048  0607  3001               	movlw	1
  2049  0608  0020               	movlb	0	; select bank0
  2050  0609  00BA               	movwf	??_beep2
  2051  060A  0A38               	incf	beep2@co,w
  2052  060B  2E0D               	goto	u1104
  2053  060C                     u1105:	
  2054  060C  35BA               	lslf	??_beep2,f
  2055  060D                     u1104:	
  2056  060D  0B89               	decfsz	9,f
  2057  060E  2E0C               	goto	u1105
  2058  060F  083A               	movf	??_beep2,w
  2059  0610  00BB               	movwf	??_beep2+1
  2060  0611  083B               	movf	??_beep2+1,w
  2061  0612  048C               	iorwf	12,f	;volatile
  2062                           
  2063                           ;mojeFce1840-01.h: 115: _delay((unsigned long)((500)*(4000000/4000000.0)));
  2064  0613  30A6               	movlw	166
  2065  0614  00BA               	movwf	??_beep2
  2066  0615                     u2057:	
  2067  0615  0BBA               	decfsz	??_beep2,f
  2068  0616  2E15               	goto	u2057
  2069  0617  0000               	nop
  2070                           
  2071                           ;mojeFce1840-01.h: 116: ((PORTA) &=~(1<<(co)));
  2072  0618  3001               	movlw	1
  2073  0619  0020               	movlb	0	; select bank0
  2074  061A  00BA               	movwf	??_beep2
  2075  061B  0A38               	incf	beep2@co,w
  2076  061C  2E1E               	goto	u1114
  2077  061D                     u1115:	
  2078  061D  35BA               	lslf	??_beep2,f
  2079  061E                     u1114:	
  2080  061E  0B89               	decfsz	9,f
  2081  061F  2E1D               	goto	u1115
  2082  0620  083A               	movf	??_beep2,w
  2083  0621  3AFF               	xorlw	255
  2084  0622  00BB               	movwf	??_beep2+1
  2085  0623  083B               	movf	??_beep2+1,w
  2086  0624  058C               	andwf	12,f	;volatile
  2087                           
  2088                           ;mojeFce1840-01.h: 118: _delay((unsigned long)((500)*(4000000/4000000.0)));
  2089  0625  30A6               	movlw	166
  2090  0626  00BA               	movwf	??_beep2
  2091  0627                     u2067:	
  2092  0627  0BBA               	decfsz	??_beep2,f
  2093  0628  2E27               	goto	u2067
  2094  0629  0000               	nop
  2095  062A  3001               	movlw	1
  2096  062B  0020               	movlb	0	; select bank0
  2097  062C  07BC               	addwf	beep2@p,f
  2098  062D  3000               	movlw	0
  2099  062E  3DBD               	addwfc	beep2@p+1,f
  2100  062F  2DFC               	goto	L1
  2101  0630                     __end_of_beep2:	
  2102                           
  2103                           	psect	text12
  2104  054B                     __ptext12:	
  2105 ;; *************** function _beep *****************
  2106 ;; Defined at:
  2107 ;;		line 92 in file "mojeFce1840-01.h"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;  co              2   24[BANK0 ] int 
  2110 ;; Auto vars:     Size  Location     Type
  2111 ;;  p               2   28[BANK0 ] int 
  2112 ;; Return value:  Size  Location     Type
  2113 ;;		None               void
  2114 ;; Registers used:
  2115 ;;		wreg, status,2, status,0, btemp+1
  2116 ;; Tracked objects:
  2117 ;;		On entry : 0/0
  2118 ;;		On exit  : 0/0
  2119 ;;		Unchanged: 0/0
  2120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2121 ;;      Params:         0       2       0       0
  2122 ;;      Locals:         0       2       0       0
  2123 ;;      Temps:          0       2       0       0
  2124 ;;      Totals:         0       6       0       0
  2125 ;;Total ram usage:        6 bytes
  2126 ;; Hardware stack levels used:    1
  2127 ;; Hardware stack levels required when called:    6
  2128 ;; This function calls:
  2129 ;;		Nothing
  2130 ;; This function is called by:
  2131 ;;		_init
  2132 ;;		_initTest
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136                           
  2137                           ;psect for function _beep
  2138  054B                     _beep:	
  2139                           
  2140                           ;mojeFce1840-01.h: 94: int p;
  2141                           ;mojeFce1840-01.h: 95: for(p=0;p<30; p++)
  2142                           
  2143                           ;incstack = 0
  2144                           ; Regs used in _beep: [wreg+status,2+status,0+btemp+1]
  2145  054B  0020               	movlb	0	; select bank0
  2146  054C  01BC               	clrf	beep@p
  2147  054D  01BD               	clrf	beep@p+1
  2148  054E                     L2:	
  2149  054E  083D               	movf	beep@p+1,w
  2150  054F  3A80               	xorlw	128
  2151  0550  00FF               	movwf	127
  2152  0551  3080               	movlw	128
  2153  0552  027F               	subwf	127,w
  2154  0553  1D03               	skipz
  2155  0554  2D57               	goto	u1055
  2156  0555  301E               	movlw	30
  2157  0556  023C               	subwf	beep@p,w
  2158  0557                     u1055:	
  2159  0557  1803               	btfsc	3,0
  2160  0558  0008               	return
  2161                           
  2162                           ;mojeFce1840-01.h: 96: {
  2163                           ;mojeFce1840-01.h: 97: ((PORTA) |=(1<<(co));
  2164  0559  3001               	movlw	1
  2165  055A  0020               	movlb	0	; select bank0
  2166  055B  00BA               	movwf	??_beep
  2167  055C  0A38               	incf	beep@co,w
  2168  055D  2D5F               	goto	u1064
  2169  055E                     u1065:	
  2170  055E  35BA               	lslf	??_beep,f
  2171  055F                     u1064:	
  2172  055F  0B89               	decfsz	9,f
  2173  0560  2D5E               	goto	u1065
  2174  0561  083A               	movf	??_beep,w
  2175  0562  00BB               	movwf	??_beep+1
  2176  0563  083B               	movf	??_beep+1,w
  2177  0564  048C               	iorwf	12,f	;volatile
  2178                           
  2179                           ;mojeFce1840-01.h: 99: _delay((unsigned long)((1)*(4000000/4000.0)));
  2180  0565  30F9               	movlw	249
  2181  0566  00BA               	movwf	??_beep
  2182  0567                     u2077:	
  2183  0567  0000               	nop
  2184  0568  0BBA               	decfsz	??_beep,f
  2185  0569  2D67               	goto	u2077
  2186  056A  2D6B               	nop2	;nop
  2187  056B  0000               	nop
  2188                           
  2189                           ;mojeFce1840-01.h: 100: ((PORTA) &=~(1<<(co)));
  2190  056C  3001               	movlw	1
  2191  056D  0020               	movlb	0	; select bank0
  2192  056E  00BA               	movwf	??_beep
  2193  056F  0A38               	incf	beep@co,w
  2194  0570  2D72               	goto	u1074
  2195  0571                     u1075:	
  2196  0571  35BA               	lslf	??_beep,f
  2197  0572                     u1074:	
  2198  0572  0B89               	decfsz	9,f
  2199  0573  2D71               	goto	u1075
  2200  0574  083A               	movf	??_beep,w
  2201  0575  3AFF               	xorlw	255
  2202  0576  00BB               	movwf	??_beep+1
  2203  0577  083B               	movf	??_beep+1,w
  2204  0578  058C               	andwf	12,f	;volatile
  2205                           
  2206                           ;mojeFce1840-01.h: 102: _delay((unsigned long)((1)*(4000000/4000.0)));
  2207  0579  30F9               	movlw	249
  2208  057A  00BA               	movwf	??_beep
  2209  057B                     u2087:	
  2210  057B  0000               	nop
  2211  057C  0BBA               	decfsz	??_beep,f
  2212  057D  2D7B               	goto	u2087
  2213  057E  2D7F               	nop2	;nop
  2214  057F  0000               	nop
  2215  0580  3001               	movlw	1
  2216  0581  0020               	movlb	0	; select bank0
  2217  0582  07BC               	addwf	beep@p,f
  2218  0583  3000               	movlw	0
  2219  0584  3DBD               	addwfc	beep@p+1,f
  2220  0585  2D4E               	goto	L2
  2221  0586                     __end_of_beep:	
  2222                           
  2223                           	psect	text13
  2224  0630                     __ptext13:	
  2225 ;; *************** function _buttonpressed *****************
  2226 ;; Defined at:
  2227 ;;		line 189 in file "1840-c-tmr0.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;  poz             2   24[BANK0 ] int 
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;		None
  2232 ;; Return value:  Size  Location     Type
  2233 ;;                  2   24[BANK0 ] int 
  2234 ;; Registers used:
  2235 ;;		wreg, status,2, status,0
  2236 ;; Tracked objects:
  2237 ;;		On entry : 0/0
  2238 ;;		On exit  : 0/0
  2239 ;;		Unchanged: 0/0
  2240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2241 ;;      Params:         0       2       0       0
  2242 ;;      Locals:         0       0       0       0
  2243 ;;      Temps:          0       2       0       0
  2244 ;;      Totals:         0       4       0       0
  2245 ;;Total ram usage:        4 bytes
  2246 ;; Hardware stack levels used:    1
  2247 ;; Hardware stack levels required when called:    6
  2248 ;; This function calls:
  2249 ;;		Nothing
  2250 ;; This function is called by:
  2251 ;;		_main
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255                           
  2256                           ;psect for function _buttonpressed
  2257  0630                     _buttonpressed:	
  2258                           
  2259                           ;1840-c-tmr0.c: 192: if (((PORTA) & (1<<(poz))))
  2260                           
  2261                           ;incstack = 0
  2262                           ; Regs used in _buttonpressed: [wreg+status,2+status,0]
  2263  0630  3001               	movlw	1
  2264  0631  0020               	movlb	0	; select bank0
  2265  0632  00BA               	movwf	??_buttonpressed
  2266  0633  0A38               	incf	buttonpressed@poz,w
  2267  0634  2E36               	goto	u1224
  2268  0635                     u1225:	
  2269  0635  35BA               	lslf	??_buttonpressed,f
  2270  0636                     u1224:	
  2271  0636  0B89               	decfsz	9,f
  2272  0637  2E35               	goto	u1225
  2273  0638  083A               	movf	??_buttonpressed,w
  2274  0639  050C               	andwf	12,w	;volatile
  2275  063A  1903               	btfsc	3,2
  2276  063B  2E55               	goto	l2058
  2277                           
  2278                           ;1840-c-tmr0.c: 193: {
  2279                           ;1840-c-tmr0.c: 194: _delay((unsigned long)((5)*(4000000/4000.0)));
  2280  063C  3007               	movlw	7
  2281  063D  00BB               	movwf	??_buttonpressed+1
  2282  063E  307D               	movlw	125
  2283  063F  00BA               	movwf	??_buttonpressed
  2284  0640                     u2097:	
  2285  0640  0BBA               	decfsz	??_buttonpressed,f
  2286  0641  2E40               	goto	u2097
  2287  0642  0BBB               	decfsz	??_buttonpressed+1,f
  2288  0643  2E40               	goto	u2097
  2289                           
  2290                           ;1840-c-tmr0.c: 195: if (((PORTA) & (1<<(poz))))
  2291  0644  3001               	movlw	1
  2292  0645  0020               	movlb	0	; select bank0
  2293  0646  00BA               	movwf	??_buttonpressed
  2294  0647  0A38               	incf	buttonpressed@poz,w
  2295  0648  2E4A               	goto	u1244
  2296  0649                     u1245:	
  2297  0649  35BA               	lslf	??_buttonpressed,f
  2298  064A                     u1244:	
  2299  064A  0B89               	decfsz	9,f
  2300  064B  2E49               	goto	u1245
  2301  064C  083A               	movf	??_buttonpressed,w
  2302  064D  050C               	andwf	12,w	;volatile
  2303  064E  1903               	btfsc	3,2
  2304  064F  2E55               	goto	l2058
  2305                           
  2306                           ;1840-c-tmr0.c: 196: {
  2307                           ;1840-c-tmr0.c: 197: return 1;
  2308  0650  3001               	movlw	1
  2309  0651  00B8               	movwf	?_buttonpressed
  2310  0652  3000               	movlw	0
  2311  0653  00B9               	movwf	?_buttonpressed+1
  2312  0654  0008               	return
  2313  0655                     l2058:	
  2314                           
  2315                           ;1840-c-tmr0.c: 198: }
  2316                           ;1840-c-tmr0.c: 199: }
  2317                           ;1840-c-tmr0.c: 200: return 0;
  2318  0655  01B8               	clrf	?_buttonpressed
  2319  0656  01B9               	clrf	?_buttonpressed+1
  2320  0657  0008               	return
  2321  0658                     __end_of_buttonpressed:	
  2322                           
  2323                           	psect	intentry
  2324  0004                     __pintentry:	
  2325 ;; *************** function _isr *****************
  2326 ;; Defined at:
  2327 ;;		line 122 in file "1840-c-tmr0.c"
  2328 ;; Parameters:    Size  Location     Type
  2329 ;;		None
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;		None
  2332 ;; Return value:  Size  Location     Type
  2333 ;;		None               void
  2334 ;; Registers used:
  2335 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2336 ;; Tracked objects:
  2337 ;;		On entry : 0/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2341 ;;      Params:         0       0       0       0
  2342 ;;      Locals:         0       0       0       0
  2343 ;;      Temps:          0       2       0       0
  2344 ;;      Totals:         0       2       0       0
  2345 ;;Total ram usage:        2 bytes
  2346 ;; Hardware stack levels used:    1
  2347 ;; Hardware stack levels required when called:    5
  2348 ;; This function calls:
  2349 ;;		_kazdouVterinu
  2350 ;; This function is called by:
  2351 ;;		Interrupt level 1
  2352 ;; This function uses a non-reentrant model
  2353 ;;
  2354                           
  2355  0004                     _isr:	
  2356                           
  2357                           ;incstack = 0
  2358                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2359  0004  3180               	pagesel	$
  2360  0005  0020               	movlb	0	; select bank0
  2361  0006  087F               	movf	127,w
  2362  0007  00B7               	movwf	??_isr+1
  2363                           
  2364                           ;1840-c-tmr0.c: 124: static uint16_t cnt_t0 = 0;
  2365                           ;1840-c-tmr0.c: 129: TMR0 += 256-250+3;
  2366  0008  3009               	movlw	9
  2367  0009  00B6               	movwf	??_isr
  2368  000A  0836               	movf	??_isr,w
  2369  000B  0795               	addwf	21,f	;volatile
  2370                           
  2371                           ;1840-c-tmr0.c: 130: INTCONbits.T0IF = 0;
  2372  000C  110B               	bcf	11,2	;volatile
  2373                           
  2374                           ;1840-c-tmr0.c: 133: ++cnt_t0;
  2375  000D  3001               	movlw	1
  2376  000E  07CF               	addwf	isr@cnt_t0,f
  2377  000F  3000               	movlw	0
  2378  0010  3DD0               	addwfc	isr@cnt_t0+1,f
  2379                           
  2380                           ;1840-c-tmr0.c: 134: if (cnt_t0 == 500000/250*2) {
  2381  0011  300F               	movlw	15
  2382  0012  0650               	xorwf	isr@cnt_t0+1,w
  2383  0013  1D03               	skipz
  2384  0014  2817               	goto	u178_25
  2385  0015  30A0               	movlw	160
  2386  0016  064F               	xorwf	isr@cnt_t0,w
  2387  0017                     u178_25:	
  2388  0017  1D03               	skipz
  2389  0018  281D               	goto	i1l271
  2390                           
  2391                           ;1840-c-tmr0.c: 135: cnt_t0 = 0;
  2392  0019  01CF               	clrf	isr@cnt_t0
  2393  001A  01D0               	clrf	isr@cnt_t0+1
  2394                           
  2395                           ;1840-c-tmr0.c: 137: kazdouVterinu();
  2396  001B  3182  225B         	fcall	_kazdouVterinu
  2397  001D                     i1l271:	
  2398  001D  0020               	movlb	0	; select bank0
  2399  001E  0837               	movf	??_isr+1,w
  2400  001F  00FF               	movwf	127
  2401  0020  0009               	retfie
  2402  0021                     __end_of_isr:	
  2403                           
  2404                           	psect	text15
  2405  025B                     __ptext15:	
  2406 ;; *************** function _kazdouVterinu *****************
  2407 ;; Defined at:
  2408 ;;		line 141 in file "1840-c-tmr0.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;		None
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;		None
  2413 ;; Return value:  Size  Location     Type
  2414 ;;		None               void
  2415 ;; Registers used:
  2416 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2417 ;; Tracked objects:
  2418 ;;		On entry : 0/0
  2419 ;;		On exit  : 0/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2422 ;;      Params:         0       0       0       0
  2423 ;;      Locals:         0       0       0       0
  2424 ;;      Temps:          0       2       0       0
  2425 ;;      Totals:         0       2       0       0
  2426 ;;Total ram usage:        2 bytes
  2427 ;; Hardware stack levels used:    1
  2428 ;; Hardware stack levels required when called:    4
  2429 ;; This function calls:
  2430 ;;		_adcSample
  2431 ;;		_initAnalog
  2432 ;;		_kazdouMinutu
  2433 ;;		_posliData
  2434 ;; This function is called by:
  2435 ;;		_isr
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           
  2440                           ;psect for function _kazdouVterinu
  2441  025B                     _kazdouVterinu:	
  2442                           
  2443                           ;1840-c-tmr0.c: 145: initAnalog(0);
  2444                           
  2445                           ;incstack = 0
  2446                           ; Regs used in _kazdouVterinu: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2447  025B  3000               	movlw	0
  2448  025C  00F0               	movwf	initAnalog@ch
  2449  025D  3000               	movlw	0
  2450  025E  00F1               	movwf	initAnalog@ch+1
  2451  025F  3185  2586  3182   	fcall	_initAnalog
  2452                           
  2453                           ;1840-c-tmr0.c: 146: adcSample();
  2454  0262  3186  26C6  3182   	fcall	_adcSample
  2455                           
  2456                           ;1840-c-tmr0.c: 147: posliData('1',valADc);
  2457  0265  3031               	movlw	49
  2458  0266  0020               	movlb	0	; select bank0
  2459  0267  00B0               	movwf	posliData@ch
  2460  0268  3000               	movlw	0
  2461  0269  00B1               	movwf	posliData@ch+1
  2462  026A  084E               	movf	_valADc+1,w
  2463  026B  01B3               	clrf	posliData@value+1
  2464  026C  07B3               	addwf	posliData@value+1,f
  2465  026D  084D               	movf	_valADc,w
  2466  026E  01B2               	clrf	posliData@value
  2467  026F  07B2               	addwf	posliData@value,f
  2468  0270  3183  23E5  3182   	fcall	_posliData
  2469                           
  2470                           ;1840-c-tmr0.c: 148: _delay((unsigned long)((10)*(4000000/4000.0)));
  2471  0273  300D               	movlw	13
  2472  0274  0020               	movlb	0	; select bank0
  2473  0275  00B5               	movwf	??_kazdouVterinu+1
  2474  0276  30FB               	movlw	251
  2475  0277  00B4               	movwf	??_kazdouVterinu
  2476  0278                     u210_27:	
  2477  0278  0BB4               	decfsz	??_kazdouVterinu,f
  2478  0279  2A78               	goto	u210_27
  2479  027A  0BB5               	decfsz	??_kazdouVterinu+1,f
  2480  027B  2A78               	goto	u210_27
  2481  027C  2A7D               	nop2
  2482                           
  2483                           ;1840-c-tmr0.c: 150: if (valADc<min1) min1 = valADc;
  2484  027D  0020               	movlb	0	; select bank0
  2485  027E  084E               	movf	_valADc+1,w
  2486  027F  3A80               	xorlw	128
  2487  0280  00B4               	movwf	??_kazdouVterinu
  2488  0281  0854               	movf	_min1+1,w
  2489  0282  3A80               	xorlw	128
  2490  0283  0234               	subwf	??_kazdouVterinu,w
  2491  0284  1D03               	skipz
  2492  0285  2A88               	goto	u173_25
  2493  0286  0853               	movf	_min1,w
  2494  0287  024D               	subwf	_valADc,w
  2495  0288                     u173_25:	
  2496  0288  1803               	skipnc
  2497  0289  2A91               	goto	i1l2370
  2498  028A  0020               	movlb	0	; select bank0
  2499  028B  084E               	movf	_valADc+1,w
  2500  028C  01D4               	clrf	_min1+1
  2501  028D  07D4               	addwf	_min1+1,f
  2502  028E  084D               	movf	_valADc,w
  2503  028F  01D3               	clrf	_min1
  2504  0290  07D3               	addwf	_min1,f
  2505  0291                     i1l2370:	
  2506                           
  2507                           ;1840-c-tmr0.c: 151: if (valADc>max1) max1 = valADc;
  2508  0291  0020               	movlb	0	; select bank0
  2509  0292  0844               	movf	_max1+1,w
  2510  0293  3A80               	xorlw	128
  2511  0294  00B4               	movwf	??_kazdouVterinu
  2512  0295  084E               	movf	_valADc+1,w
  2513  0296  3A80               	xorlw	128
  2514  0297  0234               	subwf	??_kazdouVterinu,w
  2515  0298  1D03               	skipz
  2516  0299  2A9C               	goto	u174_25
  2517  029A  084D               	movf	_valADc,w
  2518  029B  0243               	subwf	_max1,w
  2519  029C                     u174_25:	
  2520  029C  1803               	skipnc
  2521  029D  2AA5               	goto	i1l2374
  2522  029E  0020               	movlb	0	; select bank0
  2523  029F  084E               	movf	_valADc+1,w
  2524  02A0  01C4               	clrf	_max1+1
  2525  02A1  07C4               	addwf	_max1+1,f
  2526  02A2  084D               	movf	_valADc,w
  2527  02A3  01C3               	clrf	_max1
  2528  02A4  07C3               	addwf	_max1,f
  2529  02A5                     i1l2374:	
  2530                           
  2531                           ;1840-c-tmr0.c: 158: initAnalog(1);
  2532  02A5  3001               	movlw	1
  2533  02A6  00F0               	movwf	initAnalog@ch
  2534  02A7  3000               	movlw	0
  2535  02A8  00F1               	movwf	initAnalog@ch+1
  2536  02A9  3185  2586  3182   	fcall	_initAnalog
  2537                           
  2538                           ;1840-c-tmr0.c: 159: adcSample();
  2539  02AC  3186  26C6  3182   	fcall	_adcSample
  2540                           
  2541                           ;1840-c-tmr0.c: 160: posliData('2',valADc);
  2542  02AF  3032               	movlw	50
  2543  02B0  0020               	movlb	0	; select bank0
  2544  02B1  00B0               	movwf	posliData@ch
  2545  02B2  3000               	movlw	0
  2546  02B3  00B1               	movwf	posliData@ch+1
  2547  02B4  084E               	movf	_valADc+1,w
  2548  02B5  01B3               	clrf	posliData@value+1
  2549  02B6  07B3               	addwf	posliData@value+1,f
  2550  02B7  084D               	movf	_valADc,w
  2551  02B8  01B2               	clrf	posliData@value
  2552  02B9  07B2               	addwf	posliData@value,f
  2553  02BA  3183  23E5  3182   	fcall	_posliData
  2554                           
  2555                           ;1840-c-tmr0.c: 161: _delay((unsigned long)((10)*(4000000/4000.0)));
  2556  02BD  300D               	movlw	13
  2557  02BE  0020               	movlb	0	; select bank0
  2558  02BF  00B5               	movwf	??_kazdouVterinu+1
  2559  02C0  30FB               	movlw	251
  2560  02C1  00B4               	movwf	??_kazdouVterinu
  2561  02C2                     u211_27:	
  2562  02C2  0BB4               	decfsz	??_kazdouVterinu,f
  2563  02C3  2AC2               	goto	u211_27
  2564  02C4  0BB5               	decfsz	??_kazdouVterinu+1,f
  2565  02C5  2AC2               	goto	u211_27
  2566  02C6  2AC7               	nop2
  2567                           
  2568                           ;1840-c-tmr0.c: 163: if (valADc<min2) min2 = valADc;
  2569  02C7  0020               	movlb	0	; select bank0
  2570  02C8  084E               	movf	_valADc+1,w
  2571  02C9  3A80               	xorlw	128
  2572  02CA  00B4               	movwf	??_kazdouVterinu
  2573  02CB  0856               	movf	_min2+1,w
  2574  02CC  3A80               	xorlw	128
  2575  02CD  0234               	subwf	??_kazdouVterinu,w
  2576  02CE  1D03               	skipz
  2577  02CF  2AD2               	goto	u175_25
  2578  02D0  0855               	movf	_min2,w
  2579  02D1  024D               	subwf	_valADc,w
  2580  02D2                     u175_25:	
  2581  02D2  1803               	skipnc
  2582  02D3  2ADB               	goto	i1l2386
  2583  02D4  0020               	movlb	0	; select bank0
  2584  02D5  084E               	movf	_valADc+1,w
  2585  02D6  01D6               	clrf	_min2+1
  2586  02D7  07D6               	addwf	_min2+1,f
  2587  02D8  084D               	movf	_valADc,w
  2588  02D9  01D5               	clrf	_min2
  2589  02DA  07D5               	addwf	_min2,f
  2590  02DB                     i1l2386:	
  2591                           
  2592                           ;1840-c-tmr0.c: 164: if (valADc>max2) max2 = valADc;
  2593  02DB  0020               	movlb	0	; select bank0
  2594  02DC  0846               	movf	_max2+1,w
  2595  02DD  3A80               	xorlw	128
  2596  02DE  00B4               	movwf	??_kazdouVterinu
  2597  02DF  084E               	movf	_valADc+1,w
  2598  02E0  3A80               	xorlw	128
  2599  02E1  0234               	subwf	??_kazdouVterinu,w
  2600  02E2  1D03               	skipz
  2601  02E3  2AE6               	goto	u176_25
  2602  02E4  084D               	movf	_valADc,w
  2603  02E5  0245               	subwf	_max2,w
  2604  02E6                     u176_25:	
  2605  02E6  1803               	skipnc
  2606  02E7  2AEF               	goto	i1l2390
  2607  02E8  0020               	movlb	0	; select bank0
  2608  02E9  084E               	movf	_valADc+1,w
  2609  02EA  01C6               	clrf	_max2+1
  2610  02EB  07C6               	addwf	_max2+1,f
  2611  02EC  084D               	movf	_valADc,w
  2612  02ED  01C5               	clrf	_max2
  2613  02EE  07C5               	addwf	_max2,f
  2614  02EF                     i1l2390:	
  2615                           
  2616                           ;1840-c-tmr0.c: 166: sec++;
  2617  02EF  3001               	movlw	1
  2618  02F0  0020               	movlb	0	; select bank0
  2619  02F1  07C9               	addwf	_sec,f
  2620  02F2  3000               	movlw	0
  2621  02F3  3DCA               	addwfc	_sec+1,f
  2622                           
  2623                           ;1840-c-tmr0.c: 167: if (sec==840)
  2624  02F4  3003               	movlw	3
  2625  02F5  064A               	xorwf	_sec+1,w
  2626  02F6  1D03               	skipz
  2627  02F7  2AFA               	goto	u177_25
  2628  02F8  3048               	movlw	72
  2629  02F9  0649               	xorwf	_sec,w
  2630  02FA                     u177_25:	
  2631  02FA  1D03               	skipz
  2632  02FB  0008               	return
  2633                           
  2634                           ;1840-c-tmr0.c: 168: {
  2635                           ;1840-c-tmr0.c: 169: sec=0;
  2636  02FC  01C9               	clrf	_sec
  2637  02FD  01CA               	clrf	_sec+1
  2638                           
  2639                           ;1840-c-tmr0.c: 170: kazdouMinutu();
  2640  02FE  3185  250F         	fcall	_kazdouMinutu
  2641  0300  0008               	return
  2642  0301                     __end_of_kazdouVterinu:	
  2643                           
  2644                           	psect	text16
  2645  03E5                     __ptext16:	
  2646 ;; *************** function _posliData *****************
  2647 ;; Defined at:
  2648 ;;		line 285 in file "1840-c-tmr0.c"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;  ch              2   16[BANK0 ] int 
  2651 ;;  value           2   18[BANK0 ] int 
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;		None
  2654 ;; Return value:  Size  Location     Type
  2655 ;;		None               void
  2656 ;; Registers used:
  2657 ;;		wreg, status,2, status,0, pclath, cstack
  2658 ;; Tracked objects:
  2659 ;;		On entry : 0/0
  2660 ;;		On exit  : 0/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2663 ;;      Params:         0       4       0       0
  2664 ;;      Locals:         0       0       0       0
  2665 ;;      Temps:          2       0       0       0
  2666 ;;      Totals:         2       4       0       0
  2667 ;;Total ram usage:        6 bytes
  2668 ;; Hardware stack levels used:    1
  2669 ;; Hardware stack levels required when called:    3
  2670 ;; This function calls:
  2671 ;;		i1_uart_3numb
  2672 ;;		i1_uart_char
  2673 ;; This function is called by:
  2674 ;;		_kazdouVterinu
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678                           
  2679                           ;psect for function _posliData
  2680  03E5                     _posliData:	
  2681                           
  2682                           ;1840-c-tmr0.c: 287: uart_char(' ');
  2683                           
  2684                           ;incstack = 0
  2685                           ; Regs used in _posliData: [wreg+status,2+status,0+pclath+cstack]
  2686  03E5  3020               	movlw	32
  2687  03E6  3186  26DF  3183   	fcall	i1_uart_char
  2688                           
  2689                           ;1840-c-tmr0.c: 288: uart_char(' ');
  2690  03E9  3020               	movlw	32
  2691  03EA  3186  26DF  3183   	fcall	i1_uart_char
  2692                           
  2693                           ;1840-c-tmr0.c: 289: uart_char(' ');
  2694  03ED  3020               	movlw	32
  2695  03EE  3186  26DF  3183   	fcall	i1_uart_char
  2696                           
  2697                           ;1840-c-tmr0.c: 290: _delay((unsigned long)((30)*(4000000/4000.0)));
  2698  03F1  3027               	movlw	39
  2699  03F2  00FC               	movwf	??_posliData+1
  2700  03F3  30F5               	movlw	245
  2701  03F4  00FB               	movwf	??_posliData
  2702  03F5                     u212_27:	
  2703  03F5  0BFB               	decfsz	??_posliData,f
  2704  03F6  2BF5               	goto	u212_27
  2705  03F7  0BFC               	decfsz	??_posliData+1,f
  2706  03F8  2BF5               	goto	u212_27
  2707                           
  2708                           ;1840-c-tmr0.c: 292: uart_char('#');
  2709  03F9  3023               	movlw	35
  2710  03FA  3186  26DF  3183   	fcall	i1_uart_char
  2711                           
  2712                           ;1840-c-tmr0.c: 293: uart_char(ch);
  2713  03FD  0020               	movlb	0	; select bank0
  2714  03FE  0830               	movf	posliData@ch,w
  2715  03FF  3186  26DF  3183   	fcall	i1_uart_char
  2716                           
  2717                           ;1840-c-tmr0.c: 294: uart_char('>');
  2718  0402  303E               	movlw	62
  2719  0403  3186  26DF  3183   	fcall	i1_uart_char
  2720                           
  2721                           ;1840-c-tmr0.c: 295: uart_3numb(value);
  2722  0406  0020               	movlb	0	; select bank0
  2723  0407  0833               	movf	posliData@value+1,w
  2724  0408  01A5               	clrf	i1uart_3numb@num3+1
  2725  0409  07A5               	addwf	i1uart_3numb@num3+1,f
  2726  040A  0832               	movf	posliData@value,w
  2727  040B  01A4               	clrf	i1uart_3numb@num3
  2728  040C  07A4               	addwf	i1uart_3numb@num3,f
  2729  040D  3183  2301  3183   	fcall	i1_uart_3numb
  2730                           
  2731                           ;1840-c-tmr0.c: 296: uart_char('*');
  2732  0410  302A               	movlw	42
  2733  0411  3186  26DF  3183   	fcall	i1_uart_char
  2734                           
  2735                           ;1840-c-tmr0.c: 297: _delay((unsigned long)((30)*(4000000/4000.0)));
  2736  0414  3027               	movlw	39
  2737  0415  00FC               	movwf	??_posliData+1
  2738  0416  30F5               	movlw	245
  2739  0417  00FB               	movwf	??_posliData
  2740  0418                     u213_27:	
  2741  0418  0BFB               	decfsz	??_posliData,f
  2742  0419  2C18               	goto	u213_27
  2743  041A  0BFC               	decfsz	??_posliData+1,f
  2744  041B  2C18               	goto	u213_27
  2745                           
  2746                           ;1840-c-tmr0.c: 299: uart_char(' ');
  2747  041C  3020               	movlw	32
  2748  041D  3186  26DF  3183   	fcall	i1_uart_char
  2749                           
  2750                           ;1840-c-tmr0.c: 300: uart_char(' ');
  2751  0420  3020               	movlw	32
  2752  0421  3186  26DF  3183   	fcall	i1_uart_char
  2753                           
  2754                           ;1840-c-tmr0.c: 301: uart_char(' ');
  2755  0424  3020               	movlw	32
  2756  0425  3186  26DF  3183   	fcall	i1_uart_char
  2757                           
  2758                           ;1840-c-tmr0.c: 302: uart_char(' ');
  2759  0428  3020               	movlw	32
  2760  0429  3186  26DF  3183   	fcall	i1_uart_char
  2761                           
  2762                           ;1840-c-tmr0.c: 303: uart_char(' ');
  2763  042C  3020               	movlw	32
  2764  042D  3186  26DF  3183   	fcall	i1_uart_char
  2765                           
  2766                           ;1840-c-tmr0.c: 305: _delay((unsigned long)((50)*(4000000/4000.0)));
  2767  0430  3041               	movlw	65
  2768  0431  00FC               	movwf	??_posliData+1
  2769  0432  30EE               	movlw	238
  2770  0433  00FB               	movwf	??_posliData
  2771  0434                     u214_27:	
  2772  0434  0BFB               	decfsz	??_posliData,f
  2773  0435  2C34               	goto	u214_27
  2774  0436  0BFC               	decfsz	??_posliData+1,f
  2775  0437  2C34               	goto	u214_27
  2776  0438  0000               	nop
  2777  0439  0008               	return
  2778  043A                     __end_of_posliData:	
  2779                           
  2780                           	psect	text17
  2781  0301                     __ptext17:	
  2782 ;; *************** function i1_uart_3numb *****************
  2783 ;; Defined at:
  2784 ;;		line 323 in file "mojeFce1840-01.h"
  2785 ;; Parameters:    Size  Location     Type
  2786 ;;  num3            2    4[BANK0 ] int 
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;  uart_3numb      2   14[BANK0 ] int 
  2789 ;;  uart_3numb      2   12[BANK0 ] int 
  2790 ;;  uart_3numb      2   10[BANK0 ] int 
  2791 ;; Return value:  Size  Location     Type
  2792 ;;		None               void
  2793 ;; Registers used:
  2794 ;;		wreg, status,2, status,0, pclath, cstack
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2800 ;;      Params:         0       2       0       0
  2801 ;;      Locals:         0       6       0       0
  2802 ;;      Temps:          0       4       0       0
  2803 ;;      Totals:         0      12       0       0
  2804 ;;Total ram usage:       12 bytes
  2805 ;; Hardware stack levels used:    1
  2806 ;; Hardware stack levels required when called:    2
  2807 ;; This function calls:
  2808 ;;		i1___awdiv
  2809 ;;		i1___wmul
  2810 ;;		i1_uart_1numb
  2811 ;; This function is called by:
  2812 ;;		_posliData
  2813 ;; This function uses a non-reentrant model
  2814 ;;
  2815                           
  2816                           
  2817                           ;psect for function i1_uart_3numb
  2818  0301                     i1_uart_3numb:	
  2819                           
  2820                           ;mojeFce1840-01.h: 325: int i100= (num3/100);
  2821                           
  2822                           ;incstack = 0
  2823                           ; Regs used in i1_uart_3numb: [wreg+status,2+status,0+pclath+cstack]
  2824  0301  3064               	movlw	100
  2825  0302  00F6               	movwf	i1___awdiv@divisor
  2826  0303  3000               	movlw	0
  2827  0304  00F7               	movwf	i1___awdiv@divisor+1
  2828  0305  0020               	movlb	0	; select bank0
  2829  0306  0825               	movf	i1uart_3numb@num3+1,w
  2830  0307  01F9               	clrf	i1___awdiv@dividend+1
  2831  0308  07F9               	addwf	i1___awdiv@dividend+1,f
  2832  0309  0824               	movf	i1uart_3numb@num3,w
  2833  030A  01F8               	clrf	i1___awdiv@dividend
  2834  030B  07F8               	addwf	i1___awdiv@dividend,f
  2835  030C  3184  243A  3183   	fcall	i1___awdiv
  2836  030F  0877               	movf	?i1___awdiv+1,w
  2837  0310  0020               	movlb	0	; select bank0
  2838  0311  01AF               	clrf	i1uart_3numb@i100+1
  2839  0312  07AF               	addwf	i1uart_3numb@i100+1,f
  2840  0313  0876               	movf	?i1___awdiv,w
  2841  0314  01AE               	clrf	i1uart_3numb@i100
  2842  0315  07AE               	addwf	i1uart_3numb@i100,f
  2843                           
  2844                           ;mojeFce1840-01.h: 326: int i10 = (num3-i100*100)/10;
  2845  0316  300A               	movlw	10
  2846  0317  00F6               	movwf	i1___awdiv@divisor
  2847  0318  3000               	movlw	0
  2848  0319  00F7               	movwf	i1___awdiv@divisor+1
  2849  031A  082F               	movf	i1uart_3numb@i100+1,w
  2850  031B  01F1               	clrf	i1___wmul@multiplier+1
  2851  031C  07F1               	addwf	i1___wmul@multiplier+1,f
  2852  031D  082E               	movf	i1uart_3numb@i100,w
  2853  031E  01F0               	clrf	i1___wmul@multiplier
  2854  031F  07F0               	addwf	i1___wmul@multiplier,f
  2855  0320  3064               	movlw	100
  2856  0321  00F2               	movwf	i1___wmul@multiplicand
  2857  0322  3000               	movlw	0
  2858  0323  00F3               	movwf	i1___wmul@multiplicand+1
  2859  0324  3186  2658  3183   	fcall	i1___wmul
  2860  0327  0970               	comf	?i1___wmul,w
  2861  0328  0020               	movlb	0	; select bank0
  2862  0329  00A6               	movwf	??i1_uart_3numb
  2863  032A  0971               	comf	?i1___wmul+1,w
  2864  032B  00A7               	movwf	??i1_uart_3numb+1
  2865  032C  0AA6               	incf	??i1_uart_3numb,f
  2866  032D  1903               	skipnz
  2867  032E  0AA7               	incf	??i1_uart_3numb+1,f
  2868  032F  0824               	movf	i1uart_3numb@num3,w
  2869  0330  0726               	addwf	??i1_uart_3numb,w
  2870  0331  00F8               	movwf	i1___awdiv@dividend
  2871  0332  0825               	movf	i1uart_3numb@num3+1,w
  2872  0333  3D27               	addwfc	??i1_uart_3numb+1,w
  2873  0334  00F9               	movwf	i1___awdiv@dividend+1
  2874  0335  3184  243A  3183   	fcall	i1___awdiv
  2875  0338  0877               	movf	?i1___awdiv+1,w
  2876  0339  0020               	movlb	0	; select bank0
  2877  033A  01AD               	clrf	i1uart_3numb@i10+1
  2878  033B  07AD               	addwf	i1uart_3numb@i10+1,f
  2879  033C  0876               	movf	?i1___awdiv,w
  2880  033D  01AC               	clrf	i1uart_3numb@i10
  2881  033E  07AC               	addwf	i1uart_3numb@i10,f
  2882                           
  2883                           ;mojeFce1840-01.h: 327: int i1 = num3-i100*100-i10*10;
  2884  033F  082F               	movf	i1uart_3numb@i100+1,w
  2885  0340  01F1               	clrf	i1___wmul@multiplier+1
  2886  0341  07F1               	addwf	i1___wmul@multiplier+1,f
  2887  0342  082E               	movf	i1uart_3numb@i100,w
  2888  0343  01F0               	clrf	i1___wmul@multiplier
  2889  0344  07F0               	addwf	i1___wmul@multiplier,f
  2890  0345  3064               	movlw	100
  2891  0346  00F2               	movwf	i1___wmul@multiplicand
  2892  0347  3000               	movlw	0
  2893  0348  00F3               	movwf	i1___wmul@multiplicand+1
  2894  0349  3186  2658  3183   	fcall	i1___wmul
  2895  034C  0870               	movf	?i1___wmul,w
  2896  034D  0020               	movlb	0	; select bank0
  2897  034E  00A6               	movwf	??i1_uart_3numb
  2898  034F  0871               	movf	?i1___wmul+1,w
  2899  0350  00A7               	movwf	??i1_uart_3numb+1
  2900  0351  082D               	movf	i1uart_3numb@i10+1,w
  2901  0352  01F1               	clrf	i1___wmul@multiplier+1
  2902  0353  07F1               	addwf	i1___wmul@multiplier+1,f
  2903  0354  082C               	movf	i1uart_3numb@i10,w
  2904  0355  01F0               	clrf	i1___wmul@multiplier
  2905  0356  07F0               	addwf	i1___wmul@multiplier,f
  2906  0357  300A               	movlw	10
  2907  0358  00F2               	movwf	i1___wmul@multiplicand
  2908  0359  3000               	movlw	0
  2909  035A  00F3               	movwf	i1___wmul@multiplicand+1
  2910  035B  3186  2658  3183   	fcall	i1___wmul
  2911  035E  0870               	movf	?i1___wmul,w
  2912  035F  0020               	movlb	0	; select bank0
  2913  0360  0726               	addwf	??i1_uart_3numb,w
  2914  0361  00A8               	movwf	??i1_uart_3numb+2
  2915  0362  0871               	movf	?i1___wmul+1,w
  2916  0363  3D27               	addwfc	??i1_uart_3numb+1,w
  2917  0364  00A9               	movwf	??i1_uart_3numb+3
  2918  0365  09A8               	comf	??i1_uart_3numb+2,f
  2919  0366  09A9               	comf	??i1_uart_3numb+3,f
  2920  0367  0AA8               	incf	??i1_uart_3numb+2,f
  2921  0368  1903               	skipnz
  2922  0369  0AA9               	incf	??i1_uart_3numb+3,f
  2923  036A  0824               	movf	i1uart_3numb@num3,w
  2924  036B  0728               	addwf	??i1_uart_3numb+2,w
  2925  036C  00AA               	movwf	i1uart_3numb@i1
  2926  036D  0825               	movf	i1uart_3numb@num3+1,w
  2927  036E  3D29               	addwfc	??i1_uart_3numb+3,w
  2928  036F  00AB               	movwf	i1uart_3numb@i1+1
  2929                           
  2930                           ;mojeFce1840-01.h: 328: uart_1numb(i100);
  2931  0370  082F               	movf	i1uart_3numb@i100+1,w
  2932  0371  01F2               	clrf	i1uart_1numb@num+1
  2933  0372  07F2               	addwf	i1uart_1numb@num+1,f
  2934  0373  082E               	movf	i1uart_3numb@i100,w
  2935  0374  01F1               	clrf	i1uart_1numb@num
  2936  0375  07F1               	addwf	i1uart_1numb@num,f
  2937  0376  3186  26F8  3183   	fcall	i1_uart_1numb
  2938                           
  2939                           ;mojeFce1840-01.h: 329: uart_1numb(i10);
  2940  0379  0020               	movlb	0	; select bank0
  2941  037A  082D               	movf	i1uart_3numb@i10+1,w
  2942  037B  01F2               	clrf	i1uart_1numb@num+1
  2943  037C  07F2               	addwf	i1uart_1numb@num+1,f
  2944  037D  082C               	movf	i1uart_3numb@i10,w
  2945  037E  01F1               	clrf	i1uart_1numb@num
  2946  037F  07F1               	addwf	i1uart_1numb@num,f
  2947  0380  3186  26F8  3183   	fcall	i1_uart_1numb
  2948                           
  2949                           ;mojeFce1840-01.h: 330: uart_1numb(i1);
  2950  0383  0020               	movlb	0	; select bank0
  2951  0384  082B               	movf	i1uart_3numb@i1+1,w
  2952  0385  01F2               	clrf	i1uart_1numb@num+1
  2953  0386  07F2               	addwf	i1uart_1numb@num+1,f
  2954  0387  082A               	movf	i1uart_3numb@i1,w
  2955  0388  01F1               	clrf	i1uart_1numb@num
  2956  0389  07F1               	addwf	i1uart_1numb@num,f
  2957  038A  3186  26F8         	fcall	i1_uart_1numb
  2958  038C  0008               	return
  2959  038D                     __end_ofi1_uart_3numb:	
  2960                           
  2961                           	psect	text18
  2962  06F8                     __ptext18:	
  2963 ;; *************** function i1_uart_1numb *****************
  2964 ;; Defined at:
  2965 ;;		line 318 in file "mojeFce1840-01.h"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;  num             2    1[COMMON] int 
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;		None
  2970 ;; Return value:  Size  Location     Type
  2971 ;;		None               void
  2972 ;; Registers used:
  2973 ;;		wreg, status,2, status,0, pclath, cstack
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2979 ;;      Params:         2       0       0       0
  2980 ;;      Locals:         0       0       0       0
  2981 ;;      Temps:          0       0       0       0
  2982 ;;      Totals:         2       0       0       0
  2983 ;;Total ram usage:        2 bytes
  2984 ;; Hardware stack levels used:    1
  2985 ;; Hardware stack levels required when called:    1
  2986 ;; This function calls:
  2987 ;;		i1_uart_char
  2988 ;; This function is called by:
  2989 ;;		i1_uart_3numb
  2990 ;; This function uses a non-reentrant model
  2991 ;;
  2992                           
  2993                           
  2994                           ;psect for function i1_uart_1numb
  2995  06F8                     i1_uart_1numb:	
  2996                           
  2997                           ;mojeFce1840-01.h: 320: uart_char(48+num);
  2998                           
  2999                           ;incstack = 0
  3000                           ; Regs used in i1_uart_1numb: [wreg+status,2+status,0+pclath+cstack]
  3001  06F8  0871               	movf	i1uart_1numb@num,w
  3002  06F9  3E30               	addlw	48
  3003  06FA  3186  26DF         	fcall	i1_uart_char
  3004  06FC  0008               	return
  3005  06FD                     __end_ofi1_uart_1numb:	
  3006                           
  3007                           	psect	text19
  3008  06DF                     __ptext19:	
  3009 ;; *************** function i1_uart_char *****************
  3010 ;; Defined at:
  3011 ;;		line 290 in file "mojeFce1840-01.h"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;  data            1    wreg     unsigned char 
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;  data            1    0[COMMON] unsigned char 
  3016 ;; Return value:  Size  Location     Type
  3017 ;;		None               void
  3018 ;; Registers used:
  3019 ;;		wreg
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3025 ;;      Params:         0       0       0       0
  3026 ;;      Locals:         1       0       0       0
  3027 ;;      Temps:          0       0       0       0
  3028 ;;      Totals:         1       0       0       0
  3029 ;;Total ram usage:        1 bytes
  3030 ;; Hardware stack levels used:    1
  3031 ;; This function calls:
  3032 ;;		Nothing
  3033 ;; This function is called by:
  3034 ;;		_posliData
  3035 ;;		i1_uart_1numb
  3036 ;; This function uses a non-reentrant model
  3037 ;;
  3038                           
  3039                           
  3040                           ;psect for function i1_uart_char
  3041  06DF                     i1_uart_char:	
  3042                           
  3043                           ;incstack = 0
  3044                           ; Regs used in i1_uart_char: [wreg]
  3045                           ;i1uart_char@data stored from wreg
  3046  06DF  00F0               	movwf	i1uart_char@data
  3047                           
  3048                           ;mojeFce1840-01.h: 293: TXREG = data;
  3049  06E0  0870               	movf	i1uart_char@data,w
  3050  06E1  0023               	movlb	3	; select bank3
  3051  06E2  009A               	movwf	26	;volatile
  3052  06E3                     i1l158:	
  3053                           ;mojeFce1840-01.h: 295: while(!TXSTAbits.TRMT);
  3054                           
  3055  06E3  189E               	btfsc	30,1	;volatile
  3056  06E4  0008               	return
  3057  06E5  2EE3               	goto	i1l158
  3058  06E6                     __end_ofi1_uart_char:	
  3059                           
  3060                           	psect	text20
  3061  0658                     __ptext20:	
  3062 ;; *************** function i1___wmul *****************
  3063 ;; Defined at:
  3064 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\wmul.c"
  3065 ;; Parameters:    Size  Location     Type
  3066 ;;  multiplier      2    0[COMMON] unsigned int 
  3067 ;;  multiplicand    2    2[COMMON] unsigned int 
  3068 ;; Auto vars:     Size  Location     Type
  3069 ;;  __wmul          2    4[COMMON] unsigned int 
  3070 ;; Return value:  Size  Location     Type
  3071 ;;                  2    0[COMMON] unsigned int 
  3072 ;; Registers used:
  3073 ;;		wreg, status,2, status,0
  3074 ;; Tracked objects:
  3075 ;;		On entry : 0/0
  3076 ;;		On exit  : 0/0
  3077 ;;		Unchanged: 0/0
  3078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3079 ;;      Params:         4       0       0       0
  3080 ;;      Locals:         2       0       0       0
  3081 ;;      Temps:          0       0       0       0
  3082 ;;      Totals:         6       0       0       0
  3083 ;;Total ram usage:        6 bytes
  3084 ;; Hardware stack levels used:    1
  3085 ;; This function calls:
  3086 ;;		Nothing
  3087 ;; This function is called by:
  3088 ;;		i1_uart_3numb
  3089 ;; This function uses a non-reentrant model
  3090 ;;
  3091                           
  3092                           
  3093                           ;psect for function i1___wmul
  3094  0658                     i1___wmul:	
  3095                           
  3096                           ;incstack = 0
  3097                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  3098  0658  01F4               	clrf	i1___wmul@product
  3099  0659  01F5               	clrf	i1___wmul@product+1
  3100  065A                     i1l2218:	
  3101  065A  1870               	btfsc	i1___wmul@multiplier,0
  3102  065B  2E5E               	goto	i1l2220
  3103  065C  0020               	movlb	0	; select bank0
  3104  065D  2E62               	goto	i1l748
  3105  065E                     i1l2220:	
  3106  065E  0872               	movf	i1___wmul@multiplicand,w
  3107  065F  07F4               	addwf	i1___wmul@product,f
  3108  0660  0873               	movf	i1___wmul@multiplicand+1,w
  3109  0661  3DF5               	addwfc	i1___wmul@product+1,f
  3110  0662                     i1l748:	
  3111  0662  3001               	movlw	1
  3112  0663                     u152_25:	
  3113  0663  35F2               	lslf	i1___wmul@multiplicand,f
  3114  0664  0DF3               	rlf	i1___wmul@multiplicand+1,f
  3115  0665  0B89               	decfsz	9,f
  3116  0666  2E63               	goto	u152_25
  3117  0667  3001               	movlw	1
  3118  0668                     u153_25:	
  3119  0668  36F1               	lsrf	i1___wmul@multiplier+1,f
  3120  0669  0CF0               	rrf	i1___wmul@multiplier,f
  3121  066A  0B89               	decfsz	9,f
  3122  066B  2E68               	goto	u153_25
  3123  066C  0871               	movf	i1___wmul@multiplier+1,w
  3124  066D  0470               	iorwf	i1___wmul@multiplier,w
  3125  066E  1D03               	skipz
  3126  066F  2E5A               	goto	i1l2218
  3127  0670  0875               	movf	i1___wmul@product+1,w
  3128  0671  01F1               	clrf	?i1___wmul+1
  3129  0672  07F1               	addwf	?i1___wmul+1,f
  3130  0673  0874               	movf	i1___wmul@product,w
  3131  0674  01F0               	clrf	?i1___wmul
  3132  0675  07F0               	addwf	?i1___wmul,f
  3133  0676  0020               	movlb	0	; select bank0
  3134  0677  0008               	return
  3135  0678                     __end_ofi1___wmul:	
  3136                           
  3137                           	psect	text21
  3138  043A                     __ptext21:	
  3139 ;; *************** function i1___awdiv *****************
  3140 ;; Defined at:
  3141 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\awdiv.c"
  3142 ;; Parameters:    Size  Location     Type
  3143 ;;  divisor         2    6[COMMON] int 
  3144 ;;  dividend        2    8[COMMON] int 
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;  __awdiv         2    2[BANK0 ] int 
  3147 ;;  __awdiv         1    1[BANK0 ] unsigned char 
  3148 ;;  __awdiv         1    0[BANK0 ] unsigned char 
  3149 ;; Return value:  Size  Location     Type
  3150 ;;                  2    6[COMMON] int 
  3151 ;; Registers used:
  3152 ;;		wreg, status,2, status,0
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3158 ;;      Params:         4       0       0       0
  3159 ;;      Locals:         0       4       0       0
  3160 ;;      Temps:          1       0       0       0
  3161 ;;      Totals:         5       4       0       0
  3162 ;;Total ram usage:        9 bytes
  3163 ;; Hardware stack levels used:    1
  3164 ;; This function calls:
  3165 ;;		Nothing
  3166 ;; This function is called by:
  3167 ;;		i1_uart_3numb
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           
  3172                           ;psect for function i1___awdiv
  3173  043A                     i1___awdiv:	
  3174                           
  3175                           ;incstack = 0
  3176                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  3177  043A  0020               	movlb	0	; select bank0
  3178  043B  01A1               	clrf	i1___awdiv@sign
  3179  043C  1FF7               	btfss	i1___awdiv@divisor+1,7
  3180  043D  2C45               	goto	i1l2280
  3181  043E  09F6               	comf	i1___awdiv@divisor,f
  3182  043F  09F7               	comf	i1___awdiv@divisor+1,f
  3183  0440  0AF6               	incf	i1___awdiv@divisor,f
  3184  0441  1903               	skipnz
  3185  0442  0AF7               	incf	i1___awdiv@divisor+1,f
  3186  0443  01A1               	clrf	i1___awdiv@sign
  3187  0444  0AA1               	incf	i1___awdiv@sign,f
  3188  0445                     i1l2280:	
  3189  0445  1FF9               	btfss	i1___awdiv@dividend+1,7
  3190  0446  2C50               	goto	i1l2286
  3191  0447  09F8               	comf	i1___awdiv@dividend,f
  3192  0448  09F9               	comf	i1___awdiv@dividend+1,f
  3193  0449  0AF8               	incf	i1___awdiv@dividend,f
  3194  044A  1903               	skipnz
  3195  044B  0AF9               	incf	i1___awdiv@dividend+1,f
  3196  044C  3001               	movlw	1
  3197  044D  00FA               	movwf	??i1___awdiv
  3198  044E  087A               	movf	??i1___awdiv,w
  3199  044F  06A1               	xorwf	i1___awdiv@sign,f
  3200  0450                     i1l2286:	
  3201  0450  01A2               	clrf	i1___awdiv@quotient
  3202  0451  01A3               	clrf	i1___awdiv@quotient+1
  3203  0452  0877               	movf	i1___awdiv@divisor+1,w
  3204  0453  0476               	iorwf	i1___awdiv@divisor,w
  3205  0454  1903               	skipnz
  3206  0455  2C7F               	goto	i1l2308
  3207  0456  01A0               	clrf	i1___awdiv@counter
  3208  0457  0AA0               	incf	i1___awdiv@counter,f
  3209  0458                     i1l2296:	
  3210  0458  1BF7               	btfsc	i1___awdiv@divisor+1,7
  3211  0459  2C64               	goto	i1l2298
  3212  045A  3001               	movlw	1
  3213  045B                     u166_25:	
  3214  045B  35F6               	lslf	i1___awdiv@divisor,f
  3215  045C  0DF7               	rlf	i1___awdiv@divisor+1,f
  3216  045D  0B89               	decfsz	9,f
  3217  045E  2C5B               	goto	u166_25
  3218  045F  3001               	movlw	1
  3219  0460  00FA               	movwf	??i1___awdiv
  3220  0461  087A               	movf	??i1___awdiv,w
  3221  0462  07A0               	addwf	i1___awdiv@counter,f
  3222  0463  2C58               	goto	i1l2296
  3223  0464                     i1l2298:	
  3224  0464  3001               	movlw	1
  3225  0465                     u168_25:	
  3226  0465  35A2               	lslf	i1___awdiv@quotient,f
  3227  0466  0DA3               	rlf	i1___awdiv@quotient+1,f
  3228  0467  0B89               	decfsz	9,f
  3229  0468  2C65               	goto	u168_25
  3230  0469  0877               	movf	i1___awdiv@divisor+1,w
  3231  046A  0279               	subwf	i1___awdiv@dividend+1,w
  3232  046B  1D03               	skipz
  3233  046C  2C6F               	goto	u169_25
  3234  046D  0876               	movf	i1___awdiv@divisor,w
  3235  046E  0278               	subwf	i1___awdiv@dividend,w
  3236  046F                     u169_25:	
  3237  046F  1C03               	skipc
  3238  0470  2C76               	goto	i1l2304
  3239  0471  0876               	movf	i1___awdiv@divisor,w
  3240  0472  02F8               	subwf	i1___awdiv@dividend,f
  3241  0473  0877               	movf	i1___awdiv@divisor+1,w
  3242  0474  3BF9               	subwfb	i1___awdiv@dividend+1,f
  3243  0475  1422               	bsf	i1___awdiv@quotient,0
  3244  0476                     i1l2304:	
  3245  0476  3001               	movlw	1
  3246  0477                     u170_25:	
  3247  0477  36F7               	lsrf	i1___awdiv@divisor+1,f
  3248  0478  0CF6               	rrf	i1___awdiv@divisor,f
  3249  0479  0B89               	decfsz	9,f
  3250  047A  2C77               	goto	u170_25
  3251  047B  3001               	movlw	1
  3252  047C  02A0               	subwf	i1___awdiv@counter,f
  3253  047D  1D03               	btfss	3,2
  3254  047E  2C64               	goto	i1l2298
  3255  047F                     i1l2308:	
  3256  047F  0821               	movf	i1___awdiv@sign,w
  3257  0480  1903               	btfsc	3,2
  3258  0481  2C87               	goto	i1l2312
  3259  0482  09A2               	comf	i1___awdiv@quotient,f
  3260  0483  09A3               	comf	i1___awdiv@quotient+1,f
  3261  0484  0AA2               	incf	i1___awdiv@quotient,f
  3262  0485  1903               	skipnz
  3263  0486  0AA3               	incf	i1___awdiv@quotient+1,f
  3264  0487                     i1l2312:	
  3265  0487  0823               	movf	i1___awdiv@quotient+1,w
  3266  0488  01F7               	clrf	?i1___awdiv+1
  3267  0489  07F7               	addwf	?i1___awdiv+1,f
  3268  048A  0822               	movf	i1___awdiv@quotient,w
  3269  048B  01F6               	clrf	?i1___awdiv
  3270  048C  07F6               	addwf	?i1___awdiv,f
  3271  048D  0021               	movlb	1	; select bank1
  3272  048E  0008               	return
  3273  048F                     __end_ofi1___awdiv:	
  3274                           
  3275                           	psect	text22
  3276  050F                     __ptext22:	
  3277 ;; *************** function _kazdouMinutu *****************
  3278 ;; Defined at:
  3279 ;;		line 174 in file "1840-c-tmr0.c"
  3280 ;; Parameters:    Size  Location     Type
  3281 ;;		None
  3282 ;; Auto vars:     Size  Location     Type
  3283 ;;		None
  3284 ;; Return value:  Size  Location     Type
  3285 ;;		None               void
  3286 ;; Registers used:
  3287 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3288 ;; Tracked objects:
  3289 ;;		On entry : 0/0
  3290 ;;		On exit  : 0/0
  3291 ;;		Unchanged: 0/0
  3292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3293 ;;      Params:         0       0       0       0
  3294 ;;      Locals:         0       0       0       0
  3295 ;;      Temps:          0       0       0       0
  3296 ;;      Totals:         0       0       0       0
  3297 ;;Total ram usage:        0 bytes
  3298 ;; Hardware stack levels used:    1
  3299 ;; Hardware stack levels required when called:    1
  3300 ;; This function calls:
  3301 ;;		_ulozData
  3302 ;;		i1_beep
  3303 ;; This function is called by:
  3304 ;;		_kazdouVterinu
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           
  3309                           ;psect for function _kazdouMinutu
  3310  050F                     _kazdouMinutu:	
  3311                           
  3312                           ;1840-c-tmr0.c: 176: beep(2);
  3313                           
  3314                           ;incstack = 0
  3315                           ; Regs used in _kazdouMinutu: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3316  050F  3002               	movlw	2
  3317  0510  00F0               	movwf	i1beep@co
  3318  0511  3000               	movlw	0
  3319  0512  00F1               	movwf	i1beep@co+1
  3320  0513  3185  25C0  3185   	fcall	i1_beep
  3321                           
  3322                           ;1840-c-tmr0.c: 178: ulozData(min1);
  3323  0516  0020               	movlb	0	; select bank0
  3324  0517  0854               	movf	_min1+1,w
  3325  0518  01F1               	clrf	ulozData@value+1
  3326  0519  07F1               	addwf	ulozData@value+1,f
  3327  051A  0853               	movf	_min1,w
  3328  051B  01F0               	clrf	ulozData@value
  3329  051C  07F0               	addwf	ulozData@value,f
  3330  051D  3184  24CF  3185   	fcall	_ulozData
  3331                           
  3332                           ;1840-c-tmr0.c: 179: ulozData(max1);
  3333  0520  0020               	movlb	0	; select bank0
  3334  0521  0844               	movf	_max1+1,w
  3335  0522  01F1               	clrf	ulozData@value+1
  3336  0523  07F1               	addwf	ulozData@value+1,f
  3337  0524  0843               	movf	_max1,w
  3338  0525  01F0               	clrf	ulozData@value
  3339  0526  07F0               	addwf	ulozData@value,f
  3340  0527  3184  24CF  3185   	fcall	_ulozData
  3341                           
  3342                           ;1840-c-tmr0.c: 180: min1 =255;
  3343  052A  30FF               	movlw	255
  3344  052B  0020               	movlb	0	; select bank0
  3345  052C  00D3               	movwf	_min1
  3346  052D  3000               	movlw	0
  3347  052E  00D4               	movwf	_min1+1
  3348                           
  3349                           ;1840-c-tmr0.c: 181: max1= 0;
  3350  052F  01C3               	clrf	_max1
  3351  0530  01C4               	clrf	_max1+1
  3352                           
  3353                           ;1840-c-tmr0.c: 183: ulozData(min2);
  3354  0531  0856               	movf	_min2+1,w
  3355  0532  01F1               	clrf	ulozData@value+1
  3356  0533  07F1               	addwf	ulozData@value+1,f
  3357  0534  0855               	movf	_min2,w
  3358  0535  01F0               	clrf	ulozData@value
  3359  0536  07F0               	addwf	ulozData@value,f
  3360  0537  3184  24CF  3185   	fcall	_ulozData
  3361                           
  3362                           ;1840-c-tmr0.c: 184: ulozData(max2);
  3363  053A  0020               	movlb	0	; select bank0
  3364  053B  0846               	movf	_max2+1,w
  3365  053C  01F1               	clrf	ulozData@value+1
  3366  053D  07F1               	addwf	ulozData@value+1,f
  3367  053E  0845               	movf	_max2,w
  3368  053F  01F0               	clrf	ulozData@value
  3369  0540  07F0               	addwf	ulozData@value,f
  3370  0541  3184  24CF         	fcall	_ulozData
  3371                           
  3372                           ;1840-c-tmr0.c: 185: min2 =255;
  3373  0543  30FF               	movlw	255
  3374  0544  0020               	movlb	0	; select bank0
  3375  0545  00D5               	movwf	_min2
  3376  0546  3000               	movlw	0
  3377  0547  00D6               	movwf	_min2+1
  3378                           
  3379                           ;1840-c-tmr0.c: 186: max2= 0;
  3380  0548  01C5               	clrf	_max2
  3381  0549  01C6               	clrf	_max2+1
  3382  054A  0008               	return
  3383  054B                     __end_of_kazdouMinutu:	
  3384                           
  3385                           	psect	text23
  3386  05C0                     __ptext23:	
  3387 ;; *************** function i1_beep *****************
  3388 ;; Defined at:
  3389 ;;		line 92 in file "mojeFce1840-01.h"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;  co              2    0[COMMON] int 
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;  beep            2    4[COMMON] int 
  3394 ;; Return value:  Size  Location     Type
  3395 ;;		None               void
  3396 ;; Registers used:
  3397 ;;		wreg, status,2, status,0, btemp+1
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3403 ;;      Params:         2       0       0       0
  3404 ;;      Locals:         2       0       0       0
  3405 ;;      Temps:          2       0       0       0
  3406 ;;      Totals:         6       0       0       0
  3407 ;;Total ram usage:        6 bytes
  3408 ;; Hardware stack levels used:    1
  3409 ;; This function calls:
  3410 ;;		Nothing
  3411 ;; This function is called by:
  3412 ;;		_kazdouMinutu
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416                           
  3417                           ;psect for function i1_beep
  3418  05C0                     i1_beep:	
  3419                           
  3420                           ;mojeFce1840-01.h: 94: int p;
  3421                           ;mojeFce1840-01.h: 95: for(p=0;p<30; p++)
  3422                           
  3423                           ;incstack = 0
  3424                           ; Regs used in i1_beep: [wreg+status,2+status,0+btemp+1]
  3425  05C0  01F4               	clrf	i1beep@p
  3426  05C1  01F5               	clrf	i1beep@p+1
  3427  05C2                     L3:	
  3428  05C2  0875               	movf	i1beep@p+1,w
  3429  05C3  3A80               	xorlw	128
  3430  05C4  00FF               	movwf	127
  3431  05C5  3080               	movlw	128
  3432  05C6  027F               	subwf	127,w
  3433  05C7  1D03               	skipz
  3434  05C8  2DCB               	goto	u159_25
  3435  05C9  301E               	movlw	30
  3436  05CA  0274               	subwf	i1beep@p,w
  3437  05CB                     u159_25:	
  3438  05CB  1803               	btfsc	3,0
  3439  05CC  0008               	return
  3440                           
  3441                           ;mojeFce1840-01.h: 96: {
  3442                           ;mojeFce1840-01.h: 97: ((PORTA) |=(1<<(co));
  3443  05CD  3001               	movlw	1
  3444  05CE  00F2               	movwf	??i1_beep
  3445  05CF  0A70               	incf	i1beep@co,w
  3446  05D0  2DD2               	goto	u160_24
  3447  05D1                     u160_25:	
  3448  05D1  35F2               	lslf	??i1_beep,f
  3449  05D2                     u160_24:	
  3450  05D2  0B89               	decfsz	9,f
  3451  05D3  2DD1               	goto	u160_25
  3452  05D4  0872               	movf	??i1_beep,w
  3453  05D5  00F3               	movwf	??i1_beep+1
  3454  05D6  0873               	movf	??i1_beep+1,w
  3455  05D7  0020               	movlb	0	; select bank0
  3456  05D8  048C               	iorwf	12,f	;volatile
  3457                           
  3458                           ;mojeFce1840-01.h: 99: _delay((unsigned long)((1)*(4000000/4000.0)));
  3459  05D9  30F9               	movlw	249
  3460  05DA  00F2               	movwf	??i1_beep
  3461  05DB                     u215_27:	
  3462  05DB  0000               	nop
  3463  05DC  0BF2               	decfsz	??i1_beep,f
  3464  05DD  2DDB               	goto	u215_27
  3465  05DE  2DDF               	nop2	;nop
  3466  05DF  0000               	nop
  3467                           
  3468                           ;mojeFce1840-01.h: 100: ((PORTA) &=~(1<<(co)));
  3469  05E0  3001               	movlw	1
  3470  05E1  00F2               	movwf	??i1_beep
  3471  05E2  0A70               	incf	i1beep@co,w
  3472  05E3  2DE5               	goto	u161_24
  3473  05E4                     u161_25:	
  3474  05E4  35F2               	lslf	??i1_beep,f
  3475  05E5                     u161_24:	
  3476  05E5  0B89               	decfsz	9,f
  3477  05E6  2DE4               	goto	u161_25
  3478  05E7  0872               	movf	??i1_beep,w
  3479  05E8  3AFF               	xorlw	255
  3480  05E9  00F3               	movwf	??i1_beep+1
  3481  05EA  0873               	movf	??i1_beep+1,w
  3482  05EB  0020               	movlb	0	; select bank0
  3483  05EC  058C               	andwf	12,f	;volatile
  3484                           
  3485                           ;mojeFce1840-01.h: 102: _delay((unsigned long)((1)*(4000000/4000.0)));
  3486  05ED  30F9               	movlw	249
  3487  05EE  00F2               	movwf	??i1_beep
  3488  05EF                     u216_27:	
  3489  05EF  0000               	nop
  3490  05F0  0BF2               	decfsz	??i1_beep,f
  3491  05F1  2DEF               	goto	u216_27
  3492  05F2  2DF3               	nop2	;nop
  3493  05F3  0000               	nop
  3494  05F4  3001               	movlw	1
  3495  05F5  07F4               	addwf	i1beep@p,f
  3496  05F6  3000               	movlw	0
  3497  05F7  3DF5               	addwfc	i1beep@p+1,f
  3498  05F8  2DC2               	goto	L3
  3499  05F9                     __end_ofi1_beep:	
  3500                           
  3501                           	psect	text24
  3502  04CF                     __ptext24:	
  3503 ;; *************** function _ulozData *****************
  3504 ;; Defined at:
  3505 ;;		line 275 in file "1840-c-tmr0.c"
  3506 ;; Parameters:    Size  Location     Type
  3507 ;;  value           2    0[COMMON] int 
  3508 ;; Auto vars:     Size  Location     Type
  3509 ;;		None
  3510 ;; Return value:  Size  Location     Type
  3511 ;;		None               void
  3512 ;; Registers used:
  3513 ;;		wreg, status,2, status,0, btemp+1
  3514 ;; Tracked objects:
  3515 ;;		On entry : 0/0
  3516 ;;		On exit  : 0/0
  3517 ;;		Unchanged: 0/0
  3518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3519 ;;      Params:         2       0       0       0
  3520 ;;      Locals:         0       0       0       0
  3521 ;;      Temps:          2       0       0       0
  3522 ;;      Totals:         4       0       0       0
  3523 ;;Total ram usage:        4 bytes
  3524 ;; Hardware stack levels used:    1
  3525 ;; This function calls:
  3526 ;;		Nothing
  3527 ;; This function is called by:
  3528 ;;		_kazdouMinutu
  3529 ;; This function uses a non-reentrant model
  3530 ;;
  3531                           
  3532                           
  3533                           ;psect for function _ulozData
  3534  04CF                     _ulozData:	
  3535  04CF                     i1l296:	
  3536                           ;incstack = 0
  3537                           ; Regs used in _ulozData: [wreg+status,2+status,0+btemp+1]
  3538                           ;1840-c-tmr0.c: 277: do{ while(WR)continue;EEADR=(adr);EEDATA=(value); EECON1&=0x3F;CARR
      +                          Y=0;if(GIE)CARRY=1;GIE=0; WREN=1;EECON2=0x55;EECON2=0xAA;WR=1;WREN=0; if(CARRY)GIE=1; }w
      +                          hile(0);
  3539                           
  3540  04CF  0023               	movlb	3	; select bank3
  3541  04D0  1895               	btfsc	21,1	;volsfr
  3542  04D1  2CCF               	goto	i1l296
  3543  04D2  0020               	movlb	0	; select bank0
  3544  04D3  0840               	movf	_adr+1,w
  3545  04D4  0023               	movlb	3	; select bank3
  3546  04D5  0192               	clrf	18	;volatile
  3547  04D6  0792               	addwf	18,f	;volatile
  3548  04D7  0020               	movlb	0	; select bank0
  3549  04D8  083F               	movf	_adr,w
  3550  04D9  0023               	movlb	3	; select bank3
  3551  04DA  0191               	clrf	17	;volatile
  3552  04DB  0791               	addwf	17,f	;volatile
  3553  04DC  0870               	movf	ulozData@value,w
  3554  04DD  0093               	movwf	19	;volatile
  3555  04DE  303F               	movlw	63
  3556  04DF  00F2               	movwf	??_ulozData
  3557  04E0  0872               	movf	??_ulozData,w
  3558  04E1  0595               	andwf	21,f	;volsfr
  3559  04E2  0020               	movlb	0	; select bank0
  3560  04E3  1003               	bcf	3,0	;volatile
  3561  04E4  1B8B               	btfsc	11,7	;volatile
  3562  04E5  1403               	bsf	3,0	;volatile
  3563  04E6  138B               	bcf	11,7	;volatile
  3564  04E7  0023               	movlb	3	; select bank3
  3565  04E8  1515               	bsf	21,2	;volsfr
  3566  04E9  3055               	movlw	85
  3567  04EA  0096               	movwf	22	;volsfr
  3568  04EB  30AA               	movlw	170
  3569  04EC  0096               	movwf	22	;volsfr
  3570  04ED  1495               	bsf	21,1	;volsfr
  3571  04EE  1115               	bcf	21,2	;volsfr
  3572  04EF  0020               	movlb	0	; select bank0
  3573  04F0  1803               	btfsc	3,0	;volatile
  3574  04F1  178B               	bsf	11,7	;volatile
  3575                           
  3576                           ;1840-c-tmr0.c: 278: _delay((unsigned long)((10)*(4000000/4000.0)));
  3577  04F2  300D               	movlw	13
  3578  04F3  00F3               	movwf	??_ulozData+1
  3579  04F4  30FB               	movlw	251
  3580  04F5  00F2               	movwf	??_ulozData
  3581  04F6                     u217_27:	
  3582  04F6  0BF2               	decfsz	??_ulozData,f
  3583  04F7  2CF6               	goto	u217_27
  3584  04F8  0BF3               	decfsz	??_ulozData+1,f
  3585  04F9  2CF6               	goto	u217_27
  3586  04FA  2CFB               	nop2
  3587                           
  3588                           ;1840-c-tmr0.c: 281: adr++;
  3589  04FB  3001               	movlw	1
  3590  04FC  0020               	movlb	0	; select bank0
  3591  04FD  07BF               	addwf	_adr,f
  3592  04FE  3000               	movlw	0
  3593  04FF  3DC0               	addwfc	_adr+1,f
  3594                           
  3595                           ;1840-c-tmr0.c: 282: if (adr>255) adr = 0;
  3596  0500  0840               	movf	_adr+1,w
  3597  0501  3A80               	xorlw	128
  3598  0502  00FF               	movwf	127
  3599  0503  3081               	movlw	129
  3600  0504  027F               	subwf	127,w
  3601  0505  1D03               	skipz
  3602  0506  2D09               	goto	u158_25
  3603  0507  3000               	movlw	0
  3604  0508  023F               	subwf	_adr,w
  3605  0509                     u158_25:	
  3606  0509  1C03               	skipc
  3607  050A  0008               	return
  3608  050B  0020               	movlb	0	; select bank0
  3609  050C  01BF               	clrf	_adr
  3610  050D  01C0               	clrf	_adr+1
  3611  050E  0008               	return
  3612  050F                     __end_of_ulozData:	
  3613                           
  3614                           	psect	text25
  3615  0586                     __ptext25:	
  3616 ;; *************** function _initAnalog *****************
  3617 ;; Defined at:
  3618 ;;		line 455 in file "mojeFce1840-01.h"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;  ch              2    0[COMMON] int 
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;		None
  3623 ;; Return value:  Size  Location     Type
  3624 ;;		None               void
  3625 ;; Registers used:
  3626 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3627 ;; Tracked objects:
  3628 ;;		On entry : 0/0
  3629 ;;		On exit  : 0/0
  3630 ;;		Unchanged: 0/0
  3631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3632 ;;      Params:         2       0       0       0
  3633 ;;      Locals:         0       0       0       0
  3634 ;;      Temps:          2       0       0       0
  3635 ;;      Totals:         4       0       0       0
  3636 ;;Total ram usage:        4 bytes
  3637 ;; Hardware stack levels used:    1
  3638 ;; This function calls:
  3639 ;;		Nothing
  3640 ;; This function is called by:
  3641 ;;		_kazdouVterinu
  3642 ;; This function uses a non-reentrant model
  3643 ;;
  3644                           
  3645                           
  3646                           ;psect for function _initAnalog
  3647  0586                     _initAnalog:	
  3648                           
  3649                           ;mojeFce1840-01.h: 458: ((TRISA) |=(1<<(ch));
  3650                           
  3651                           ;incstack = 0
  3652                           ; Regs used in _initAnalog: [wreg-fsr0h+status,2+status,0]
  3653  0586  3001               	movlw	1
  3654  0587  00F2               	movwf	??_initAnalog
  3655  0588  0A70               	incf	initAnalog@ch,w
  3656  0589  2D8B               	goto	u120_24
  3657  058A                     u120_25:	
  3658  058A  35F2               	lslf	??_initAnalog,f
  3659  058B                     u120_24:	
  3660  058B  0B89               	decfsz	9,f
  3661  058C  2D8A               	goto	u120_25
  3662  058D  0872               	movf	??_initAnalog,w
  3663  058E  00F3               	movwf	??_initAnalog+1
  3664  058F  0873               	movf	??_initAnalog+1,w
  3665  0590  0021               	movlb	1	; select bank1
  3666  0591  048C               	iorwf	12,f	;volatile
  3667                           
  3668                           ;mojeFce1840-01.h: 459: ANSELA |= 0b01110001;
  3669  0592  3071               	movlw	113
  3670  0593  00F2               	movwf	??_initAnalog
  3671  0594  0872               	movf	??_initAnalog,w
  3672  0595  0023               	movlb	3	; select bank3
  3673  0596  048C               	iorwf	12,f	;volatile
  3674                           
  3675                           ;mojeFce1840-01.h: 481: ADCON0bits.ADON = 1;
  3676                           
  3677                           ;mojeFce1840-01.h: 463: if (4000000 == 32000000) { ADCON1 = ADCON1bits.ADCS = 0b010;; }
  3678  0597  0021               	movlb	1	; select bank1
  3679  0598  141D               	bsf	29,0	;volatile
  3680                           
  3681                           ;mojeFce1840-01.h: 483: switch(ch)
  3682  0599  2DAC               	goto	i1l2002
  3683  059A                     i1l1992:	
  3684                           ;mojeFce1840-01.h: 484: {
  3685                           ;mojeFce1840-01.h: 485: case 0:
  3686                           
  3687                           
  3688                           ;mojeFce1840-01.h: 488: ADCON0bits.CHS = 0b0000;
  3689  059A  3083               	movlw	-125
  3690  059B  059D               	andwf	29,f	;volatile
  3691                           
  3692                           ;mojeFce1840-01.h: 489: break;
  3693  059C  0008               	return
  3694  059D                     i1l1994:	
  3695                           ;mojeFce1840-01.h: 491: case 1:
  3696                           
  3697                           
  3698                           ;mojeFce1840-01.h: 492: ADCON0bits.CHS = 0b0001;
  3699  059D  081D               	movf	29,w	;volatile
  3700  059E  3983               	andlw	-125
  3701  059F  3804               	iorlw	4
  3702  05A0  009D               	movwf	29	;volatile
  3703                           
  3704                           ;mojeFce1840-01.h: 493: break;
  3705  05A1  0008               	return
  3706  05A2                     i1l1996:	
  3707                           ;mojeFce1840-01.h: 495: case 2:
  3708                           
  3709                           
  3710                           ;mojeFce1840-01.h: 496: ADCON0bits.CHS = 0b0010;
  3711  05A2  081D               	movf	29,w	;volatile
  3712  05A3  3983               	andlw	-125
  3713  05A4  3808               	iorlw	8
  3714  05A5  009D               	movwf	29	;volatile
  3715                           
  3716                           ;mojeFce1840-01.h: 497: break;
  3717  05A6  0008               	return
  3718  05A7                     i1l1998:	
  3719                           ;mojeFce1840-01.h: 499: case 3:
  3720                           
  3721                           
  3722                           ;mojeFce1840-01.h: 500: ADCON0bits.CHS = 0b0011;
  3723  05A7  081D               	movf	29,w	;volatile
  3724  05A8  3983               	andlw	-125
  3725  05A9  380C               	iorlw	12
  3726  05AA  009D               	movwf	29	;volatile
  3727                           
  3728                           ;mojeFce1840-01.h: 504: }
  3729                           
  3730                           ;mojeFce1840-01.h: 501: break;
  3731  05AB  0008               	return
  3732  05AC                     i1l2002:	
  3733                           
  3734                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3735                           ; Switch size 1, requested type "space"
  3736                           ; Number of cases is 1, Range of values is 0 to 0
  3737                           ; switch strategies available:
  3738                           ; Name         Instructions Cycles
  3739                           ; simple_byte            4     3 (average)
  3740                           ; direct_byte            8     6 (fixed)
  3741                           ; jumptable            260     6 (fixed)
  3742                           ;	Chosen strategy is simple_byte
  3743  05AC  0871               	movf	initAnalog@ch+1,w
  3744  05AD  3A00               	xorlw	0	; case 0
  3745  05AE  1903               	skipnz
  3746  05AF  2DB1               	goto	i1l2682
  3747  05B0  2DBF               	goto	i1l220
  3748  05B1                     i1l2682:	
  3749                           
  3750                           ; Switch size 1, requested type "space"
  3751                           ; Number of cases is 4, Range of values is 0 to 3
  3752                           ; switch strategies available:
  3753                           ; Name         Instructions Cycles
  3754                           ; simple_byte           13     7 (average)
  3755                           ; direct_byte           14     6 (fixed)
  3756                           ; jumptable            260     6 (fixed)
  3757                           ;	Chosen strategy is simple_byte
  3758  05B1  0870               	movf	initAnalog@ch,w
  3759  05B2  3A00               	xorlw	0	; case 0
  3760  05B3  1903               	skipnz
  3761  05B4  2D9A               	goto	i1l1992
  3762  05B5  3A01               	xorlw	1	; case 1
  3763  05B6  1903               	skipnz
  3764  05B7  2D9D               	goto	i1l1994
  3765  05B8  3A03               	xorlw	3	; case 2
  3766  05B9  1903               	skipnz
  3767  05BA  2DA2               	goto	i1l1996
  3768  05BB  3A01               	xorlw	1	; case 3
  3769  05BC  1903               	skipnz
  3770  05BD  2DA7               	goto	i1l1998
  3771  05BE  2DBF               	goto	i1l220
  3772  05BF                     i1l220:	
  3773  05BF  0008               	return
  3774  05C0                     __end_of_initAnalog:	
  3775                           
  3776                           	psect	text26
  3777  06C6                     __ptext26:	
  3778 ;; *************** function _adcSample *****************
  3779 ;; Defined at:
  3780 ;;		line 329 in file "1840-c-tmr0.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;		None
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;		None
  3785 ;; Return value:  Size  Location     Type
  3786 ;;                  2   62[COMMON] int 
  3787 ;; Registers used:
  3788 ;;		wreg, status,2
  3789 ;; Tracked objects:
  3790 ;;		On entry : 0/0
  3791 ;;		On exit  : 0/0
  3792 ;;		Unchanged: 0/0
  3793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3794 ;;      Params:         0       0       0       0
  3795 ;;      Locals:         0       0       0       0
  3796 ;;      Temps:          2       0       0       0
  3797 ;;      Totals:         2       0       0       0
  3798 ;;Total ram usage:        2 bytes
  3799 ;; Hardware stack levels used:    1
  3800 ;; This function calls:
  3801 ;;		Nothing
  3802 ;; This function is called by:
  3803 ;;		_kazdouVterinu
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806                           
  3807                           
  3808                           ;psect for function _adcSample
  3809  06C6                     _adcSample:	
  3810                           
  3811                           ;1840-c-tmr0.c: 331: valADc = 0;
  3812                           
  3813                           ;incstack = 0
  3814                           ; Regs used in _adcSample: [wreg+status,2]
  3815  06C6  0020               	movlb	0	; select bank0
  3816  06C7  01CD               	clrf	_valADc
  3817  06C8  01CE               	clrf	_valADc+1
  3818                           
  3819                           ;1840-c-tmr0.c: 334: ADCON0bits.GO = 1;
  3820  06C9  0021               	movlb	1	; select bank1
  3821  06CA  149D               	bsf	29,1	;volatile
  3822  06CB                     i1l2114:	
  3823                           ;1840-c-tmr0.c: 335: while (ADCON0bits.GO_nDONE)
  3824                           
  3825  06CB  0021               	movlb	1	; select bank1
  3826  06CC  1C9D               	btfss	29,1	;volatile
  3827  06CD  0008               	return
  3828                           
  3829                           ;1840-c-tmr0.c: 342: valADc = ADRESH;
  3830  06CE  081C               	movf	28,w	;volatile
  3831  06CF  00F0               	movwf	??_adcSample
  3832  06D0  01F1               	clrf	??_adcSample+1
  3833  06D1  0870               	movf	??_adcSample,w
  3834  06D2  0020               	movlb	0	; select bank0
  3835  06D3  00CD               	movwf	_valADc
  3836  06D4  0871               	movf	??_adcSample+1,w
  3837  06D5  00CE               	movwf	_valADc+1
  3838  06D6  2ECB               	goto	i1l2114
  3839  06D7                     __end_of_adcSample:	
  3840  007E                     btemp	set	126	;btemp
  3841  007E                     wtemp	set	126
  3842  007E                     wtemp0	set	126
  3843  0080                     wtemp1	set	128
  3844  0082                     wtemp2	set	130
  3845  0084                     wtemp3	set	132
  3846  0086                     wtemp4	set	134
  3847  0088                     wtemp5	set	136
  3848  007F                     wtemp6	set	127
  3849  007E                     ttemp	set	126
  3850  007E                     ttemp0	set	126
  3851  0081                     ttemp1	set	129
  3852  0084                     ttemp2	set	132
  3853  0087                     ttemp3	set	135
  3854  007F                     ttemp4	set	127
  3855  007E                     ltemp	set	126
  3856  007E                     ltemp0	set	126
  3857  0082                     ltemp1	set	130
  3858  0086                     ltemp2	set	134
  3859  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     31      55
    BANK1            80     26      49
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _kazdouVterinu->_posliData
    i1_uart_3numb->i1___awdiv
    i1_uart_1numb->i1_uart_char
    i1___awdiv->i1___wmul
    _kazdouMinutu->i1_beep

Critical Paths under _main in BANK0

    _uart_3numb->___awdiv
    _uart_1numb->_uart_char
    ___awdiv->___wmul
    _init->_beep
    _init->_beep2

Critical Paths under _isr in BANK0

    _isr->_kazdouVterinu
    _kazdouVterinu->_posliData
    _posliData->i1_uart_3numb
    i1_uart_3numb->i1___awdiv

Critical Paths under _main in BANK1

    _main->_vypisEEprom
    _vypisEEprom->_uart_3numb
    _uart_3numb->___awdiv

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3456
                              _beep2
                      _buttonpressed
                               _init
                       _uart_init600
                        _vypisEEprom
 ---------------------------------------------------------------------------------
 (1) _vypisEEprom                                          6     6      0    2744
                                             20 BANK1      6     6      0
                         _uart_3numb
                          _uart_char
 ---------------------------------------------------------------------------------
 (2) _uart_3numb                                          12    10      2    2521
                                              8 BANK1     12    10      2
                            ___awdiv
                             ___wmul
                         _uart_1numb
 ---------------------------------------------------------------------------------
 (3) _uart_1numb                                           2     0      2     322
                                             25 BANK0      2     0      2
                          _uart_char
 ---------------------------------------------------------------------------------
 (2) _uart_char                                            1     1      0      31
                                             24 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     526
                                             24 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1095
                                             30 BANK0      1     1      0
                                              0 BANK1      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _uart_init600                                         0     0      0       0
                          _uart_init
 ---------------------------------------------------------------------------------
 (2) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 3     3      0     419
                                              0 BANK1      3     3      0
                               _beep
                              _beep2
                            _set4mhz
 ---------------------------------------------------------------------------------
 (2) _set4mhz                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _beep2                                                6     4      2     196
                                             24 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _beep                                                 6     4      2     223
                                             24 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _buttonpressed                                        4     2      2      97
                                             24 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0    4342
                                             22 BANK0      2     2      0
                      _kazdouVterinu
 ---------------------------------------------------------------------------------
 (6) _kazdouVterinu                                        2     2      0    4342
                                             20 BANK0      2     2      0
                          _adcSample
                         _initAnalog
                       _kazdouMinutu
                          _posliData
 ---------------------------------------------------------------------------------
 (7) _posliData                                            6     2      4    3617
                                             11 COMMON     2     2      0
                                             16 BANK0      4     0      4
                       i1_uart_3numb
                        i1_uart_char
 ---------------------------------------------------------------------------------
 (8) i1_uart_3numb                                        12    10      2    3288
                                              4 BANK0     12    10      2
                          i1___awdiv
                           i1___wmul
                       i1_uart_1numb
 ---------------------------------------------------------------------------------
 (9) i1_uart_1numb                                         2     0      2     413
                                              1 COMMON     2     0      2
                        i1_uart_char
 ---------------------------------------------------------------------------------
 (8) i1_uart_char                                          1     1      0      73
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) i1___wmul                                             6     2      4     834
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (9) i1___awdiv                                            9     5      4    1333
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _kazdouMinutu                                         0     0      0     575
                           _ulozData
                             i1_beep
 ---------------------------------------------------------------------------------
 (8) i1_beep                                               6     4      2     341
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (8) _ulozData                                             4     2      2     234
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (7) _initAnalog                                           4     2      2     150
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (7) _adcSample                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _beep2
   _buttonpressed
   _init
     _beep
     _beep2
     _set4mhz
   _uart_init600
     _uart_init
   _vypisEEprom
     _uart_3numb
       ___awdiv
         ___wmul (ARG)
       ___wmul
       _uart_1numb
         _uart_char
     _uart_char

 _isr (ROOT)
   _kazdouVterinu
     _adcSample
     _initAnalog
     _kazdouMinutu
       _ulozData
       i1_beep
     _posliData
       i1_uart_3numb
         i1___awdiv
           i1___wmul (ARG)
         i1___wmul
         i1_uart_1numb
           i1_uart_char
       i1_uart_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      75       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1F      37       6       68.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     1A      31       8       61.3%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      75      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Sat May 17 22:49:47 2014

    __end_ofi1_uart_char 06E6                        _i 0041              __CFG_CP$OFF 0000  
                     _RD 0CA8                       _WR 0CA9             ___awdiv@sign 00A5  
         posliData@value 0032      ___wmul@multiplicand 003A         i1___wmul@product 0074  
                    l158 06DC      __end_of_vypisEEprom 01B4                      l748 06A0  
                    _GIE 005F             __CFG_CPD$OFF 0000                      _adr 003F  
                    _sec 0049                      _isr 0004                      _rem 0047  
                    wreg 0009          i1uart_char@data 0070                     l2058 0655  
                   l2600 0192                     l2620 03A5                     l2630 03AD  
                   l2614 0398                     l2632 03BB                     l2642 03D6  
                   l2570 0084                     l2652 069A                     l2556 067E  
                   l2646 03DE                     l2638 03CD                     ?_isr 0070  
                   u1104 060D                     u1105 060C                     u1114 061E  
                   u1115 061D                     u2005 06A1                     u1055 0557  
                   u2015 06A6                     u1224 0636                     u1064 055F  
                   u1225 0635                     u1065 055E                     u1074 0572  
                   u1075 0571                     u1244 064A                     u1245 0649  
                   u2037 04AC                     u1095 0605                     u2047 04C2  
                   u2057 0615                     u2067 0627                     u2077 0567  
                   u2087 057B                     u2097 0640                     u1925 03B0  
                   u1945 03BC                     u1955 03C6                     u1875 0082  
                   u1965 03CE                     u1885 0190                     _RCIF 008D  
                   _TMR0 0015                     _WREN 0CAA                     _beep 054B  
                   _max1 0043                     _max2 0045                     _min1 0053  
                   _min2 0055                     _main 0678                     _init 048F  
                   fsr0h 0005                     fsr0l 0004                     indf0 0000  
                   btemp 007E                     ltemp 007E                     start 0021  
                   ttemp 007E                     wtemp 007E            __CFG_IESO$OFF 0000  
                  ??_isr 0036                    ?_beep 0038                    ?_main 0070  
         i1___awdiv@sign 0021                    ?_init 0070          __end_of___awdiv 03E5  
                  _EEADR 0191            __CFG_WDTE$OFF 0000                    _CARRY 0018  
        ___awdiv@divisor 00A0                    i1l220 05BF                    i1l158 06E3  
                  i1l271 001D                    i1l296 04CF                    i1l748 0662  
        ___awdiv@counter 00A4                    _RCREG 0199                    _SPBRG 019B  
                  _PORTA 000C                    _TRISA 008C                    _TXREG 019A  
         __CFG_FCMEN$OFF 0000                    _beep2 05F9                    beep@p 003C  
        __end_of_set4mhz 0705           __CFG_BOREN$OFF 0000         __end_ofi1___wmul 0678  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003      i1___wmul@multiplier 0070                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
     __size_ofi1___awdiv 0055              i1_uart_char 06DF           __CFG_MCLRE$OFF 0000  
 __size_of_kazdouVterinu 00A6          __initialization 0023             __end_of_beep 0586  
           __end_of_main 0697             __end_of_init 04CF              _vypisEEprom 0045  
          ?_kazdouMinutu 0070                   ??_beep 003A                   ??_main 003F  
                 ??_init 00A0                   ?_beep2 0038                   _ADCON0 009D  
                 _ADCON1 009E                   _ADRESH 009C                   _EEDATA 0193  
                 _EECON1 0195                   _EECON2 0196         ___awdiv@dividend 00A2  
                 _ANSELA 018C                   i1l2002 05AC                   i1l2114 06CB  
                 i1l2220 065E                   i1l2312 0487                   i1l2304 0476  
                 i1l2218 065A                   u120_24 058B                   i1l2308 047F  
                 u120_25 058A                   i1l2280 0445                   i1l2370 0291  
                 i1l2286 0450                   i1l2390 02EF                   i1l2374 02A5  
                 i1l2296 0458                   i1l2298 0464                   i1l2386 02DB  
                 u210_27 0278                   i1l2682 05B1                   u211_27 02C2  
                 i1l1992 059A                   i1l1994 059D                   i1l1996 05A2  
                 i1l1998 05A7                   u212_27 03F5                   u213_27 0418  
                 u214_27 0434                   u215_27 05DB                   u160_24 05D2  
                 u160_25 05D1                   u152_25 0663                   u216_27 05EF  
                 u161_24 05E5                   u161_25 05E4                   u153_25 0668  
                 u217_27 04F6                   u170_25 0477                   u173_25 0288  
                 u158_25 0509                   u166_25 045B                   u174_25 029C  
                 u159_25 05CB                   u175_25 02D2                   u168_25 0465  
                 u176_25 02E6                   _FVRRDY 08BE                   u169_25 046F  
                 u177_25 02FA                   u178_25 0017                   _OSCCON 0099  
  __size_ofi1_uart_1numb 0005    __size_ofi1_uart_3numb 008C                   _SPBRGH 019C  
                 i1_beep 05C0           __CFG_PWRTE$OFF 0000           ??_kazdouMinutu 0076  
                 ___wmul 0697                ??___awdiv 003E                   beep2@p 003C  
                 beep@co 0038                   _valADc 004D         ___awdiv@quotient 00A6  
                 _retnum 00BA        __end_ofi1___awdiv 048F                ??_set4mhz 0038  
          _kazdouVterinu 025B             i1_uart_1numb 06F8             i1_uart_3numb 0301  
       __end_of_ulozData 050F   __size_of_buttonpressed 0028       __size_of_adcSample 0011  
__end_of__initialization 0042           __pcstackCOMMON 0070             __pidataBANK0 06FD  
          __end_of_beep2 0630                ?i1___wmul 0070           _OPTION_REGbits 0095  
         ?_kazdouVterinu 0070                  ??_beep2 003A               __pbssBANK0 003F  
             __pbssBANK1 00BA             initAnalog@ch 0070                  ?i1_beep 0070  
             __pmaintext 0678                  ?___wmul 0038               __pintentry 0004  
          _buttonpressed 0630                  _CM1CON0 0111        __end_of_adcSample 06D7  
             ??i1___wmul 0074                  _CPSCON0 001E       __size_of_uart_char 0008  
     i1___awdiv@dividend 0078       __size_of_uart_init 0011       __size_of_posliData 0055  
   __end_of_kazdouMinutu 054B                  i1beep@p 0074             ?i1_uart_char 0070  
        __size_ofi1_beep 0039               _initAnalog 0586       i1___awdiv@quotient 0022  
           ?_vypisEEprom 0070            ulozData@value 0070                  ___awdiv 038D  
         ?_buttonpressed 0038          __size_of___wmul 001E                ?_ulozData 0070  
                beep2@co 0038                  __ptext1 0045                  __ptext2 01B4  
                __ptext3 06EC                  __ptext4 06D7                  __ptext5 0697  
                __ptext6 038D                  __ptext7 06F2                  __ptext8 06B5  
                __ptext9 048F          ??_kazdouVterinu 0034             __size_of_isr 001D  
                _set4mhz 0701           uart_3numb@i100 00B2           uart_3numb@num3 00A8  
                clrloop0 06E7     end_of_initialization 0042            ?_uart_init600 0070  
      __end_of_uart_char 06DF        __end_of_uart_init 06C6        __end_of_posliData 043A  
             _uart_1numb 06EC               _uart_3numb 01B4                _RCSTAbits 019D  
             ??_ulozData 0072    i1___wmul@multiplicand 0072         __CFG_FOSC$INTOSC 0000  
            posliData@ch 0030                i1___awdiv 043A           ??_uart_init600 0038  
              _TXSTAbits 019E           __end_ofi1_beep 05F9              ?_initAnalog 0070  
        ??_buttonpressed 003A           __end_of___wmul 06B5              _BAUDCONbits 019F  
  __size_of_kazdouMinutu 003C      start_initialization 0023        __size_ofi1___wmul 0020  
            __end_of_isr 0021               ?i1___awdiv 0076                 ??i1_beep 0072  
   __size_ofi1_uart_char 0007              ?_uart_1numb 0039              ?_uart_3numb 00A8  
               ??___wmul 003C             _kazdouMinutu 050F              __pdataBANK0 0053  
   __size_of_vypisEEprom 016F                _adcSample 06C6                ___latbits 0001  
          __pcstackBANK0 0020            __pcstackBANK1 00A0      __size_of_initAnalog 003A  
       buttonpressed@poz 0038                 ?___awdiv 00A0     __end_of_uart_init600 06F8  
      i1___awdiv@divisor 0076        i1___awdiv@counter 0020        __size_of_ulozData 0040  
           vypisEEprom@i 00B8                 ?_set4mhz 0070               ?_adcSample 0070  
            ??i1___awdiv 007A      __size_of_uart_1numb 0006      __size_of_uart_3numb 00A7  
         __size_of_beep2 0037            uart_1numb@num 0039            uart_3numb@i10 00B0  
         ___wmul@product 003C         i1uart_3numb@i100 002E                clear_ram0 06E6  
       i1uart_3numb@num3 0024                _uart_char 06D7                _uart_init 06B5  
             uart_dump@i 0051                _posliData 03E5               _ADCON0bits 009D  
             _ADCON1bits 009E        ___wmul@multiplier 0038                 i1___wmul 0658  
               i1beep@co 0070    __end_of_kazdouVterinu 0301            ?i1_uart_1numb 0071  
          ?i1_uart_3numb 0024                isr@cnt_t0 004F             ??_initAnalog 0072  
             ?_uart_char 0070               _APFCONbits 011D               ?_uart_init 0070  
             ?_posliData 0030         __size_of___awdiv 0058           ??i1_uart_1numb 0073  
            ??_adcSample 0070           ??i1_uart_3numb 0026         __size_of_set4mhz 0004  
               __ptext10 0701                 __ptext11 05F9                 __ptext20 0658  
               __ptext12 054B                 __ptext21 043A                 __ptext13 0630  
               __ptext22 050F                 __ptext23 05C0                 __ptext15 025B  
               __ptext24 04CF                 __ptext16 03E5                 __ptext25 0586  
               __ptext17 0301                 __ptext26 06C6                 __ptext18 06F8  
               __ptext19 06DF       __end_of_initAnalog 05C0                 _valADc16 00CF  
          __size_of_beep 003B            __size_of_main 001F            __size_of_init 0040  
        i1uart_1numb@num 0071             uart_3numb@i1 00AE          i1uart_3numb@i10 002C  
  __size_of_uart_init600 0006             ??_uart_1numb 003B             ??_uart_3numb 00AA  
               _temp_num 004B    __end_of_buttonpressed 0658                 _ulozData 04CF  
          uart_char@data 0038               _INTCONbits 000B               _FVRCONbits 0117  
     __end_of_uart_1numb 06F2       __end_of_uart_3numb 025B                 intlevel1 0000  
           _uart_init600 06F2            ??i1_uart_char 0070        __CFG_CLKOUTEN$OFF 0000  
             _OSCCONbits 0099           i1uart_3numb@i1 002A            ??_vypisEEprom 00B4  
            ??_uart_char 0038              ??_uart_init 0038              ??_posliData 007B  
   __end_ofi1_uart_1numb 06FD     __end_ofi1_uart_3numb 038D  
